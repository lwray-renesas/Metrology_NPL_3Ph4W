/******************************************************************************/
/* DISCLAIMER                                                                 */
/* This software is supplied by Renesas Electronics Corporation and is only   */
/* intended for use with Renesas products. No other uses are authorized.This  */
/* software is owned by Renesas Electronics Corporation and is protected      */
/* under all applicable laws, including copyright laws.                       */
/* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES          */
/* REGARDING THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING  */
/* BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR */
/* PURPOSE AND NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY           */
/* DISCLAIMED.                                                                */
/* TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS     */
/* ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE       */
/* LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL      */
/* DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS    */
/* AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.           */
/* Renesas reserves the right, without notice, to make changes to this        */
/* software and to discontinue the availability of this software.             */
/* By using this software, you agree to the additional terms and conditions   */
/* found by accessing the following link:                                     */
/* http://www.renesas.com/disclaimer                                          */
/*                                                                            */
/* Device     : RL78/R5F10NPL                                                 */
/* File Name  : iodefine.h                                                    */
/* Abstract   : Definition of Special Function Register (SFR)                 */
/* History    : E1.00b [Device File version]                                  */
/* Options    : -df=C:\Program Files (x86)\Renesas Electronics\CS+\CC\Device\ */
/*              RL78\Devicefile\DR5F10NPL.DVF -o=iodefine.h -f                */
/* Date       : 12/16/2020                                                    */
/* Version    : V1.12.00.01  [df2iodef.exe version]                           */
/* This is a typical example.                                                 */
/*                                                                            */
/******************************************************************************/
#ifndef __R5F10NPLIODEFINE_HEADER__
#define __R5F10NPLIODEFINE_HEADER__

typedef struct
{
    unsigned char no0:1;
    unsigned char no1:1;
    unsigned char no2:1;
    unsigned char no3:1;
    unsigned char no4:1;
    unsigned char no5:1;
    unsigned char no6:1;
    unsigned char no7:1;
} __bitf_T;

typedef struct
{
    unsigned char no0:1;
    unsigned char no1:1;
    unsigned char no2:1;
    unsigned char no3:1;
    unsigned char no4:1;
    unsigned char no5:1;
    unsigned char no6:1;
    unsigned char no7:1;
    unsigned char no8:1;
    unsigned char no9:1;
    unsigned char no10:1;
    unsigned char no11:1;
    unsigned char no12:1;
    unsigned char no13:1;
    unsigned char no14:1;
    unsigned char no15:1;
} __bitf_T2;



#define PU0            (*(volatile __near unsigned char  *)0x30)
#define PU0_bit        (*(volatile __near __bitf_T *)0x30)
#define PU1            (*(volatile __near unsigned char  *)0x31)
#define PU1_bit        (*(volatile __near __bitf_T *)0x31)
#define PU3            (*(volatile __near unsigned char  *)0x33)
#define PU3_bit        (*(volatile __near __bitf_T *)0x33)
#define PU4            (*(volatile __near unsigned char  *)0x34)
#define PU4_bit        (*(volatile __near __bitf_T *)0x34)
#define PU5            (*(volatile __near unsigned char  *)0x35)
#define PU5_bit        (*(volatile __near __bitf_T *)0x35)
#define PU7            (*(volatile __near unsigned char  *)0x37)
#define PU7_bit        (*(volatile __near __bitf_T *)0x37)
#define PU8            (*(volatile __near unsigned char  *)0x38)
#define PU8_bit        (*(volatile __near __bitf_T *)0x38)
#define PU9            (*(volatile __near unsigned char  *)0x39)
#define PU9_bit        (*(volatile __near __bitf_T *)0x39)
#define PU12           (*(volatile __near unsigned char  *)0x3C)
#define PU12_bit       (*(volatile __near __bitf_T *)0x3C)
#define PIM0           (*(volatile __near unsigned char  *)0x40)
#define PIM0_bit       (*(volatile __near __bitf_T *)0x40)
#define PIM1           (*(volatile __near unsigned char  *)0x41)
#define PIM1_bit       (*(volatile __near __bitf_T *)0x41)
#define PIM4           (*(volatile __near unsigned char  *)0x44)
#define PIM4_bit       (*(volatile __near __bitf_T *)0x44)
#define PIM5           (*(volatile __near unsigned char  *)0x45)
#define PIM5_bit       (*(volatile __near __bitf_T *)0x45)
#define PIM8           (*(volatile __near unsigned char  *)0x48)
#define PIM8_bit       (*(volatile __near __bitf_T *)0x48)
#define POM0           (*(volatile __near unsigned char  *)0x50)
#define POM0_bit       (*(volatile __near __bitf_T *)0x50)
#define POM1           (*(volatile __near unsigned char  *)0x51)
#define POM1_bit       (*(volatile __near __bitf_T *)0x51)
#define POM5           (*(volatile __near unsigned char  *)0x55)
#define POM5_bit       (*(volatile __near __bitf_T *)0x55)
#define POM8           (*(volatile __near unsigned char  *)0x58)
#define POM8_bit       (*(volatile __near __bitf_T *)0x58)
#define PMC2           (*(volatile __near unsigned char  *)0x62)
#define PMC2_bit       (*(volatile __near __bitf_T *)0x62)
#define NFEN0          (*(volatile __near unsigned char  *)0x70)
#define NFEN0_bit      (*(volatile __near __bitf_T *)0x70)
#define NFEN1          (*(volatile __near unsigned char  *)0x71)
#define NFEN1_bit      (*(volatile __near __bitf_T *)0x71)
#define ISC            (*(volatile __near unsigned char  *)0x73)
#define ISC_bit        (*(volatile __near __bitf_T *)0x73)
#define TIS0           (*(volatile __near unsigned char  *)0x74)
#define VREFAMPCNT     (*(volatile __near unsigned char  *)0x75)
#define CLKDCTL        (*(volatile __near unsigned char  *)0x76)
#define CLKDCTL_bit    (*(volatile __near __bitf_T *)0x76)
#define CLKDEN0        (((volatile __near __bitf_T *)0x76)->no0)
#define CLKDEN1        (((volatile __near __bitf_T *)0x76)->no1)
#define PIOR0          (*(volatile __near unsigned char  *)0x77)
#define IAWCTL         (*(volatile __near unsigned char  *)0x78)
#define ADCKS          (*(volatile __near unsigned char  *)0x79)
#define FMCKS          (*(volatile __near unsigned char  *)0x7A)
#define FMCKS_bit      (*(volatile __near __bitf_T *)0x7A)
#define PMS            (*(volatile __near unsigned char  *)0x7B)
#define PMS_bit        (*(volatile __near __bitf_T *)0x7B)
#define DFLCTL         (*(volatile __near unsigned char  *)0x90)
#define DFLCTL_bit     (*(volatile __near __bitf_T *)0x90)
#define DFLEN          (((volatile __near __bitf_T *)0x90)->no0)
#define PCKC           (*(volatile __near unsigned char  *)0x98)
#define PCKC_bit       (*(volatile __near __bitf_T *)0x98)
#define DSADCK         (((volatile __near __bitf_T *)0x98)->no0)
#define PLLCK          (((volatile __near __bitf_T *)0x98)->no1)
#define HIOTRM         (*(volatile __near unsigned char  *)0xA0)
#define HOCODIV        (*(volatile __near unsigned char  *)0xA8)
#define FLMODE         (*(volatile __near unsigned char  *)0xAA)
#define FLMODE_bit     (*(volatile __near __bitf_T *)0xAA)
#define BANKPGEN       (((volatile __near __bitf_T *)0xAA)->no1)
#define MODE0          (((volatile __near __bitf_T *)0xAA)->no6)
#define MODE1          (((volatile __near __bitf_T *)0xAA)->no7)
#define FLMWRP         (*(volatile __near unsigned char  *)0xAB)
#define FLMWRP_bit     (*(volatile __near __bitf_T *)0xAB)
#define FLMWEN         (((volatile __near __bitf_T *)0xAB)->no0)
#define PER0           (*(volatile __near unsigned char  *)0xF0)
#define PER0_bit       (*(volatile __near __bitf_T *)0xF0)
#define TAU0EN         (((volatile __near __bitf_T *)0xF0)->no0)
#define SAU2EN         (((volatile __near __bitf_T *)0xF0)->no1)
#define SAU0EN         (((volatile __near __bitf_T *)0xF0)->no2)
#define SAU1EN         (((volatile __near __bitf_T *)0xF0)->no3)
#define IICA0EN        (((volatile __near __bitf_T *)0xF0)->no4)
#define ADCEN          (((volatile __near __bitf_T *)0xF0)->no5)
#define IRDAEN         (((volatile __near __bitf_T *)0xF0)->no6)
#define PRR0           (*(volatile __near unsigned char  *)0xF1)
#define PRR0_bit       (*(volatile __near __bitf_T *)0xF1)
#define TAU0RES        (((volatile __near __bitf_T *)0xF1)->no0)
#define SAU2RES        (((volatile __near __bitf_T *)0xF1)->no1)
#define SAU0RES        (((volatile __near __bitf_T *)0xF1)->no2)
#define SAU1RES        (((volatile __near __bitf_T *)0xF1)->no3)
#define IICA0RES       (((volatile __near __bitf_T *)0xF1)->no4)
#define ADCRES         (((volatile __near __bitf_T *)0xF1)->no5)
#define IRDARES        (((volatile __near __bitf_T *)0xF1)->no6)
#define MOCODIV        (*(volatile __near unsigned char  *)0xF2)
#define OSMC           (*(volatile __near unsigned char  *)0xF3)
#define OSMC_bit       (*(volatile __near __bitf_T *)0xF3)
#define WUTMMCK0       (((volatile __near __bitf_T *)0xF3)->no4)
#define RTCLPC         (((volatile __near __bitf_T *)0xF3)->no7)
#define RPECTL         (*(volatile __near unsigned char  *)0xF5)
#define RPECTL_bit     (*(volatile __near __bitf_T *)0xF5)
#define RPEF           (((volatile __near __bitf_T *)0xF5)->no0)
#define RPERDIS        (((volatile __near __bitf_T *)0xF5)->no7)
#define PMMC           (*(volatile __near unsigned char  *)0xF8)
#define PMMC_bit       (*(volatile __near __bitf_T *)0xF8)
#define MCSEL          (((volatile __near __bitf_T *)0xF8)->no6)
#define PORSR          (*(volatile __near unsigned char  *)0xF9)
#define PER1           (*(volatile __near unsigned char  *)0xFA)
#define PER1_bit       (*(volatile __near __bitf_T *)0xFA)
#define DSADCEN        (((volatile __near __bitf_T *)0xFA)->no0)
#define TRJ0EN         (((volatile __near __bitf_T *)0xFA)->no1)
#define TRJ1EN         (((volatile __near __bitf_T *)0xFA)->no2)
#define DTCEN          (((volatile __near __bitf_T *)0xFA)->no3)
#define SMOTD0EN       (((volatile __near __bitf_T *)0xFA)->no4)
#define SMOTD1EN       (((volatile __near __bitf_T *)0xFA)->no5)
#define FMCEN          (((volatile __near __bitf_T *)0xFA)->no6)
#define PRR1           (*(volatile __near unsigned char  *)0xFB)
#define PRR1_bit       (*(volatile __near __bitf_T *)0xFB)
#define DSADRES        (((volatile __near __bitf_T *)0xFB)->no0)
#define TRJ0RES        (((volatile __near __bitf_T *)0xFB)->no1)
#define TRJ1RES        (((volatile __near __bitf_T *)0xFB)->no2)
#define SMOTD0RES      (((volatile __near __bitf_T *)0xFB)->no4)
#define SMOTD1RES      (((volatile __near __bitf_T *)0xFB)->no5)
#define PER2           (*(volatile __near unsigned char  *)0xFC)
#define PER2_bit       (*(volatile __near __bitf_T *)0xFC)
#define VRTCEN         (((volatile __near __bitf_T *)0xFC)->no0)
#define MACEN          (((volatile __near __bitf_T *)0xFC)->no2)
#define UARTMG0EN      (((volatile __near __bitf_T *)0xFC)->no4)
#define UARTMG1EN      (((volatile __near __bitf_T *)0xFC)->no5)
#define OSDCEN         (((volatile __near __bitf_T *)0xFC)->no6)
#define TMKAEN         (((volatile __near __bitf_T *)0xFC)->no7)
#define PRR2           (*(volatile __near unsigned char  *)0xFD)
#define PRR2_bit       (*(volatile __near __bitf_T *)0xFD)
#define MACRES         (((volatile __near __bitf_T *)0xFD)->no2)
#define UARTMG0RES     (((volatile __near __bitf_T *)0xFD)->no4)
#define UARTMG1RES     (((volatile __near __bitf_T *)0xFD)->no5)
#define OSDCRES        (((volatile __near __bitf_T *)0xFD)->no6)
#define TMKARES        (((volatile __near __bitf_T *)0xFD)->no7)
#define BCDADJ         (*(volatile __near unsigned char  *)0xFE)
#define SSR00          (*(volatile __near unsigned short *)0x100)
#define SSR00L         (*(volatile __near unsigned char  *)0x100)
#define SSR01          (*(volatile __near unsigned short *)0x102)
#define SSR01L         (*(volatile __near unsigned char  *)0x102)
#define SSR02          (*(volatile __near unsigned short *)0x104)
#define SSR02L         (*(volatile __near unsigned char  *)0x104)
#define SSR03          (*(volatile __near unsigned short *)0x106)
#define SSR03L         (*(volatile __near unsigned char  *)0x106)
#define SIR00          (*(volatile __near unsigned short *)0x108)
#define SIR00L         (*(volatile __near unsigned char  *)0x108)
#define SIR01          (*(volatile __near unsigned short *)0x10A)
#define SIR01L         (*(volatile __near unsigned char  *)0x10A)
#define SIR02          (*(volatile __near unsigned short *)0x10C)
#define SIR02L         (*(volatile __near unsigned char  *)0x10C)
#define SIR03          (*(volatile __near unsigned short *)0x10E)
#define SIR03L         (*(volatile __near unsigned char  *)0x10E)
#define SMR00          (*(volatile __near unsigned short *)0x110)
#define SMR01          (*(volatile __near unsigned short *)0x112)
#define SMR02          (*(volatile __near unsigned short *)0x114)
#define SMR03          (*(volatile __near unsigned short *)0x116)
#define SCR00          (*(volatile __near unsigned short *)0x118)
#define SCR01          (*(volatile __near unsigned short *)0x11A)
#define SCR02          (*(volatile __near unsigned short *)0x11C)
#define SCR03          (*(volatile __near unsigned short *)0x11E)
#define SE0            (*(volatile __near unsigned short *)0x120)
#define SE0L           (*(volatile __near unsigned char  *)0x120)
#define SE0L_bit       (*(volatile __near __bitf_T *)0x120)
#define SS0            (*(volatile __near unsigned short *)0x122)
#define SS0L           (*(volatile __near unsigned char  *)0x122)
#define SS0L_bit       (*(volatile __near __bitf_T *)0x122)
#define ST0            (*(volatile __near unsigned short *)0x124)
#define ST0L           (*(volatile __near unsigned char  *)0x124)
#define ST0L_bit       (*(volatile __near __bitf_T *)0x124)
#define SPS0           (*(volatile __near unsigned short *)0x126)
#define SPS0L          (*(volatile __near unsigned char  *)0x126)
#define SO0            (*(volatile __near unsigned short *)0x128)
#define SOE0           (*(volatile __near unsigned short *)0x12A)
#define SOE0L          (*(volatile __near unsigned char  *)0x12A)
#define SOE0L_bit      (*(volatile __near __bitf_T *)0x12A)
#define SOL0           (*(volatile __near unsigned short *)0x134)
#define SOL0L          (*(volatile __near unsigned char  *)0x134)
#define SSC0           (*(volatile __near unsigned short *)0x138)
#define SSC0L          (*(volatile __near unsigned char  *)0x138)
#define SSR10          (*(volatile __near unsigned short *)0x140)
#define SSR10L         (*(volatile __near unsigned char  *)0x140)
#define SSR11          (*(volatile __near unsigned short *)0x142)
#define SSR11L         (*(volatile __near unsigned char  *)0x142)
#define SSR12          (*(volatile __near unsigned short *)0x144)
#define SSR12L         (*(volatile __near unsigned char  *)0x144)
#define SSR13          (*(volatile __near unsigned short *)0x146)
#define SSR13L         (*(volatile __near unsigned char  *)0x146)
#define SIR10          (*(volatile __near unsigned short *)0x148)
#define SIR10L         (*(volatile __near unsigned char  *)0x148)
#define SIR11          (*(volatile __near unsigned short *)0x14A)
#define SIR11L         (*(volatile __near unsigned char  *)0x14A)
#define SIR12          (*(volatile __near unsigned short *)0x14C)
#define SIR12L         (*(volatile __near unsigned char  *)0x14C)
#define SIR13          (*(volatile __near unsigned short *)0x14E)
#define SIR13L         (*(volatile __near unsigned char  *)0x14E)
#define SMR10          (*(volatile __near unsigned short *)0x150)
#define SMR11          (*(volatile __near unsigned short *)0x152)
#define SMR12          (*(volatile __near unsigned short *)0x154)
#define SMR13          (*(volatile __near unsigned short *)0x156)
#define SCR10          (*(volatile __near unsigned short *)0x158)
#define SCR11          (*(volatile __near unsigned short *)0x15A)
#define SCR12          (*(volatile __near unsigned short *)0x15C)
#define SCR13          (*(volatile __near unsigned short *)0x15E)
#define SE1            (*(volatile __near unsigned short *)0x160)
#define SE1L           (*(volatile __near unsigned char  *)0x160)
#define SE1L_bit       (*(volatile __near __bitf_T *)0x160)
#define SS1            (*(volatile __near unsigned short *)0x162)
#define SS1L           (*(volatile __near unsigned char  *)0x162)
#define SS1L_bit       (*(volatile __near __bitf_T *)0x162)
#define ST1            (*(volatile __near unsigned short *)0x164)
#define ST1L           (*(volatile __near unsigned char  *)0x164)
#define ST1L_bit       (*(volatile __near __bitf_T *)0x164)
#define SPS1           (*(volatile __near unsigned short *)0x166)
#define SPS1L          (*(volatile __near unsigned char  *)0x166)
#define SO1            (*(volatile __near unsigned short *)0x168)
#define SOE1           (*(volatile __near unsigned short *)0x16A)
#define SOE1L          (*(volatile __near unsigned char  *)0x16A)
#define SOE1L_bit      (*(volatile __near __bitf_T *)0x16A)
#define SOL1           (*(volatile __near unsigned short *)0x174)
#define SOL1L          (*(volatile __near unsigned char  *)0x174)
#define TCR00          (*(volatile __near unsigned short *)0x180)
#define TCR01          (*(volatile __near unsigned short *)0x182)
#define TCR02          (*(volatile __near unsigned short *)0x184)
#define TCR03          (*(volatile __near unsigned short *)0x186)
#define TCR04          (*(volatile __near unsigned short *)0x188)
#define TCR05          (*(volatile __near unsigned short *)0x18A)
#define TCR06          (*(volatile __near unsigned short *)0x18C)
#define TCR07          (*(volatile __near unsigned short *)0x18E)
#define TMR00          (*(volatile __near unsigned short *)0x190)
#define TMR01          (*(volatile __near unsigned short *)0x192)
#define TMR02          (*(volatile __near unsigned short *)0x194)
#define TMR03          (*(volatile __near unsigned short *)0x196)
#define TMR04          (*(volatile __near unsigned short *)0x198)
#define TMR05          (*(volatile __near unsigned short *)0x19A)
#define TMR06          (*(volatile __near unsigned short *)0x19C)
#define TMR07          (*(volatile __near unsigned short *)0x19E)
#define TSR00          (*(volatile __near unsigned short *)0x1A0)
#define TSR00L         (*(volatile __near unsigned char  *)0x1A0)
#define TSR01          (*(volatile __near unsigned short *)0x1A2)
#define TSR01L         (*(volatile __near unsigned char  *)0x1A2)
#define TSR02          (*(volatile __near unsigned short *)0x1A4)
#define TSR02L         (*(volatile __near unsigned char  *)0x1A4)
#define TSR03          (*(volatile __near unsigned short *)0x1A6)
#define TSR03L         (*(volatile __near unsigned char  *)0x1A6)
#define TSR04          (*(volatile __near unsigned short *)0x1A8)
#define TSR04L         (*(volatile __near unsigned char  *)0x1A8)
#define TSR05          (*(volatile __near unsigned short *)0x1AA)
#define TSR05L         (*(volatile __near unsigned char  *)0x1AA)
#define TSR06          (*(volatile __near unsigned short *)0x1AC)
#define TSR06L         (*(volatile __near unsigned char  *)0x1AC)
#define TSR07          (*(volatile __near unsigned short *)0x1AE)
#define TSR07L         (*(volatile __near unsigned char  *)0x1AE)
#define TE0            (*(volatile __near unsigned short *)0x1B0)
#define TE0L           (*(volatile __near unsigned char  *)0x1B0)
#define TE0L_bit       (*(volatile __near __bitf_T *)0x1B0)
#define TS0            (*(volatile __near unsigned short *)0x1B2)
#define TS0L           (*(volatile __near unsigned char  *)0x1B2)
#define TS0L_bit       (*(volatile __near __bitf_T *)0x1B2)
#define TT0            (*(volatile __near unsigned short *)0x1B4)
#define TT0L           (*(volatile __near unsigned char  *)0x1B4)
#define TT0L_bit       (*(volatile __near __bitf_T *)0x1B4)
#define TPS0           (*(volatile __near unsigned short *)0x1B6)
#define TO0            (*(volatile __near unsigned short *)0x1B8)
#define TO0L           (*(volatile __near unsigned char  *)0x1B8)
#define TOE0           (*(volatile __near unsigned short *)0x1BA)
#define TOE0L          (*(volatile __near unsigned char  *)0x1BA)
#define TOE0L_bit      (*(volatile __near __bitf_T *)0x1BA)
#define TOL0           (*(volatile __near unsigned short *)0x1BC)
#define TOL0L          (*(volatile __near unsigned char  *)0x1BC)
#define TOM0           (*(volatile __near unsigned short *)0x1BE)
#define TOM0L          (*(volatile __near unsigned char  *)0x1BE)
#define SSR20          (*(volatile __near unsigned short *)0x1C0)
#define SSR20L         (*(volatile __near unsigned char  *)0x1C0)
#define SSR21          (*(volatile __near unsigned short *)0x1C2)
#define SSR21L         (*(volatile __near unsigned char  *)0x1C2)
#define SIR20          (*(volatile __near unsigned short *)0x1C8)
#define SIR20L         (*(volatile __near unsigned char  *)0x1C8)
#define SIR21          (*(volatile __near unsigned short *)0x1CA)
#define SIR21L         (*(volatile __near unsigned char  *)0x1CA)
#define SMR20          (*(volatile __near unsigned short *)0x1D0)
#define SMR21          (*(volatile __near unsigned short *)0x1D2)
#define SCR20          (*(volatile __near unsigned short *)0x1D8)
#define SCR21          (*(volatile __near unsigned short *)0x1DA)
#define SE2            (*(volatile __near unsigned short *)0x1E0)
#define SE2L           (*(volatile __near unsigned char  *)0x1E0)
#define SE2L_bit       (*(volatile __near __bitf_T *)0x1E0)
#define SS2            (*(volatile __near unsigned short *)0x1E2)
#define SS2L           (*(volatile __near unsigned char  *)0x1E2)
#define SS2L_bit       (*(volatile __near __bitf_T *)0x1E2)
#define ST2            (*(volatile __near unsigned short *)0x1E4)
#define ST2L           (*(volatile __near unsigned char  *)0x1E4)
#define ST2L_bit       (*(volatile __near __bitf_T *)0x1E4)
#define SPS2           (*(volatile __near unsigned short *)0x1E6)
#define SPS2L          (*(volatile __near unsigned char  *)0x1E6)
#define SO2            (*(volatile __near unsigned short *)0x1E8)
#define SOE2           (*(volatile __near unsigned short *)0x1EA)
#define SOE2L          (*(volatile __near unsigned char  *)0x1EA)
#define SOE2L_bit      (*(volatile __near __bitf_T *)0x1EA)
#define SOL2           (*(volatile __near unsigned short *)0x1F4)
#define SOL2L          (*(volatile __near unsigned char  *)0x1F4)
#define TXBMG0         (*(volatile __near unsigned char  *)0x210)
#define RXBMG0         (*(volatile __near unsigned char  *)0x211)
#define ASIMMG00       (*(volatile __near unsigned char  *)0x212)
#define ASIMMG00_bit   (*(volatile __near __bitf_T *)0x212)
#define ISRMMG0        (((volatile __near __bitf_T *)0x212)->no0)
#define ISSMMG0        (((volatile __near __bitf_T *)0x212)->no1)
#define RXEMG0         (((volatile __near __bitf_T *)0x212)->no5)
#define TXEMG0         (((volatile __near __bitf_T *)0x212)->no6)
#define POWERMG0       (((volatile __near __bitf_T *)0x212)->no7)
#define ASIMMG01       (*(volatile __near unsigned char  *)0x213)
#define ASIMMG01_bit   (*(volatile __near __bitf_T *)0x213)
#define BRGCMG0        (*(volatile __near unsigned char  *)0x214)
#define ASISMG0        (*(volatile __near unsigned char  *)0x215)
#define ASCTMG0        (*(volatile __near unsigned char  *)0x216)
#define ASCTMG0_bit    (*(volatile __near __bitf_T *)0x216)
#define OVECTMG0       (((volatile __near __bitf_T *)0x216)->no0)
#define FECTMG0        (((volatile __near __bitf_T *)0x216)->no1)
#define PECTMG0        (((volatile __near __bitf_T *)0x216)->no2)
#define TXBMG1         (*(volatile __near unsigned char  *)0x218)
#define RXBMG1         (*(volatile __near unsigned char  *)0x219)
#define ASIMMG10       (*(volatile __near unsigned char  *)0x21A)
#define ASIMMG10_bit   (*(volatile __near __bitf_T *)0x21A)
#define ISRMMG1        (((volatile __near __bitf_T *)0x21A)->no0)
#define ISSMMG1        (((volatile __near __bitf_T *)0x21A)->no1)
#define RXEMG1         (((volatile __near __bitf_T *)0x21A)->no5)
#define TXEMG1         (((volatile __near __bitf_T *)0x21A)->no6)
#define POWERMG1       (((volatile __near __bitf_T *)0x21A)->no7)
#define ASIMMG11       (*(volatile __near unsigned char  *)0x21B)
#define ASIMMG11_bit   (*(volatile __near __bitf_T *)0x21B)
#define BRGCMG1        (*(volatile __near unsigned char  *)0x21C)
#define ASISMG1        (*(volatile __near unsigned char  *)0x21D)
#define ASCTMG1        (*(volatile __near unsigned char  *)0x21E)
#define ASCTMG1_bit    (*(volatile __near __bitf_T *)0x21E)
#define OVECTMG1       (((volatile __near __bitf_T *)0x21E)->no0)
#define FECTMG1        (((volatile __near __bitf_T *)0x21E)->no1)
#define PECTMG1        (((volatile __near __bitf_T *)0x21E)->no2)
#define IICCTL00       (*(volatile __near unsigned char  *)0x230)
#define IICCTL00_bit   (*(volatile __near __bitf_T *)0x230)
#define SPT0           (((volatile __near __bitf_T *)0x230)->no0)
#define STT0           (((volatile __near __bitf_T *)0x230)->no1)
#define ACKE0          (((volatile __near __bitf_T *)0x230)->no2)
#define WTIM0          (((volatile __near __bitf_T *)0x230)->no3)
#define SPIE0          (((volatile __near __bitf_T *)0x230)->no4)
#define WREL0          (((volatile __near __bitf_T *)0x230)->no5)
#define LREL0          (((volatile __near __bitf_T *)0x230)->no6)
#define IICE0          (((volatile __near __bitf_T *)0x230)->no7)
#define IICCTL01       (*(volatile __near unsigned char  *)0x231)
#define IICCTL01_bit   (*(volatile __near __bitf_T *)0x231)
#define PRS0           (((volatile __near __bitf_T *)0x231)->no0)
#define DFC0           (((volatile __near __bitf_T *)0x231)->no2)
#define SMC0           (((volatile __near __bitf_T *)0x231)->no3)
#define DAD0           (((volatile __near __bitf_T *)0x231)->no4)
#define CLD0           (((volatile __near __bitf_T *)0x231)->no5)
#define WUP0           (((volatile __near __bitf_T *)0x231)->no7)
#define IICWL0         (*(volatile __near unsigned char  *)0x232)
#define IICWH0         (*(volatile __near unsigned char  *)0x233)
#define SVA0           (*(volatile __near unsigned char  *)0x234)
#define ELSELR00       (*(volatile __near unsigned char  *)0x240)
#define ELSELR01       (*(volatile __near unsigned char  *)0x241)
#define ELSELR02       (*(volatile __near unsigned char  *)0x242)
#define ELSELR03       (*(volatile __near unsigned char  *)0x243)
#define ELSELR04       (*(volatile __near unsigned char  *)0x244)
#define ELSELR05       (*(volatile __near unsigned char  *)0x245)
#define ELSELR06       (*(volatile __near unsigned char  *)0x246)
#define ELSELR07       (*(volatile __near unsigned char  *)0x247)
#define ELSELR08       (*(volatile __near unsigned char  *)0x248)
#define ELSELR09       (*(volatile __near unsigned char  *)0x249)
#define ELSELR10       (*(volatile __near unsigned char  *)0x24A)
#define ELSELR11       (*(volatile __near unsigned char  *)0x24B)
#define ELSELR12       (*(volatile __near unsigned char  *)0x24C)
#define ELSELR13       (*(volatile __near unsigned char  *)0x24D)
#define ELSELR14       (*(volatile __near unsigned char  *)0x24E)
#define ELSELR15       (*(volatile __near unsigned char  *)0x24F)
#define ELSELR16       (*(volatile __near unsigned char  *)0x250)
#define ELSELR17       (*(volatile __near unsigned char  *)0x251)
#define ELSELR18       (*(volatile __near unsigned char  *)0x252)
#define ELSELR19       (*(volatile __near unsigned char  *)0x253)
#define ELSELR20       (*(volatile __near unsigned char  *)0x254)
#define ELSELR21       (*(volatile __near unsigned char  *)0x255)
#define ELSELR22       (*(volatile __near unsigned char  *)0x256)
#define ELSELR23       (*(volatile __near unsigned char  *)0x257)
#define ELSELR24       (*(volatile __near unsigned char  *)0x258)
#define ELSELR25       (*(volatile __near unsigned char  *)0x259)
#define ELSELR26       (*(volatile __near unsigned char  *)0x25A)
#define ELSELR27       (*(volatile __near unsigned char  *)0x25B)
#define ELSELR28       (*(volatile __near unsigned char  *)0x25C)
#define ELSELR29       (*(volatile __near unsigned char  *)0x25D)
#define MUL32UL        (*(volatile __near unsigned short *)0x280)
#define MUL32UH        (*(volatile __near unsigned short *)0x282)
#define MUL32SL        (*(volatile __near unsigned short *)0x284)
#define MUL32SH        (*(volatile __near unsigned short *)0x286)
#define MAC32UL        (*(volatile __near unsigned short *)0x288)
#define MAC32UH        (*(volatile __near unsigned short *)0x28A)
#define MAC32SL        (*(volatile __near unsigned short *)0x28C)
#define MAC32SH        (*(volatile __near unsigned short *)0x28E)
#define MULR0          (*(volatile __near unsigned short *)0x290)
#define MULR1          (*(volatile __near unsigned short *)0x292)
#define MULR2          (*(volatile __near unsigned short *)0x294)
#define MULR3          (*(volatile __near unsigned short *)0x296)
#define MULC           (*(volatile __near unsigned char  *)0x29A)
#define MULC_bit       (*(volatile __near __bitf_T *)0x29A)
#define MULST          (((volatile __near __bitf_T *)0x29A)->no0)
#define MACSF          (((volatile __near __bitf_T *)0x29A)->no1)
#define MACOF          (((volatile __near __bitf_T *)0x29A)->no2)
#define MULFRAC        (((volatile __near __bitf_T *)0x29A)->no4)
#define MULSM          (((volatile __near __bitf_T *)0x29A)->no6)
#define MACMODE        (((volatile __near __bitf_T *)0x29A)->no7)
#define MULRSEL        (*(volatile __near unsigned char  *)0x29B)
#define MULRSEL_bit    (*(volatile __near __bitf_T *)0x29B)
#define MULRSELINC     (((volatile __near __bitf_T *)0x29B)->no7)
#define TRJCR0         (*(volatile __near unsigned char  *)0x2A0)
#define TRJIOC0        (*(volatile __near unsigned char  *)0x2A1)
#define TRJIOC0_bit    (*(volatile __near __bitf_T *)0x2A1)
#define TRJMR0         (*(volatile __near unsigned char  *)0x2A2)
#define TRJMR0_bit     (*(volatile __near __bitf_T *)0x2A2)
#define TRJISR0        (*(volatile __near unsigned char  *)0x2A3)
#define TRJISR0_bit    (*(volatile __near __bitf_T *)0x2A3)
#define TRJCR1         (*(volatile __near unsigned char  *)0x2A4)
#define TRJIOC1        (*(volatile __near unsigned char  *)0x2A5)
#define TRJIOC1_bit    (*(volatile __near __bitf_T *)0x2A5)
#define TRJMR1         (*(volatile __near unsigned char  *)0x2A6)
#define TRJMR1_bit     (*(volatile __near __bitf_T *)0x2A6)
#define TRJISR1        (*(volatile __near unsigned char  *)0x2A7)
#define TRJISR1_bit    (*(volatile __near __bitf_T *)0x2A7)
#define SMOTDCRSA0     (*(volatile __near unsigned char  *)0x2B0)
#define SMOTDCRSB0     (*(volatile __near unsigned char  *)0x2B1)
#define SMOTDTCS0      (*(volatile __near unsigned char  *)0x2B2)
#define SMOTDCR0       (*(volatile __near unsigned char  *)0x2B3)
#define SMOTDCR0_bit   (*(volatile __near __bitf_T *)0x2B3)
#define SMOTDTCE0      (((volatile __near __bitf_T *)0x2B3)->no0)
#define SMOTDPOL0      (((volatile __near __bitf_T *)0x2B3)->no4)
#define SMOTDSMS0      (*(volatile __near unsigned char  *)0x2B4)
#define SMOTDSMS0_bit  (*(volatile __near __bitf_T *)0x2B4)
#define SMOTDSMS00     (((volatile __near __bitf_T *)0x2B4)->no0)
#define SMOTDSMS01     (((volatile __near __bitf_T *)0x2B4)->no1)
#define SMOTDSMS02     (((volatile __near __bitf_T *)0x2B4)->no2)
#define SMOTDSMS03     (((volatile __near __bitf_T *)0x2B4)->no3)
#define SMOTDSMS04     (((volatile __near __bitf_T *)0x2B4)->no4)
#define SMOTDSMS05     (((volatile __near __bitf_T *)0x2B4)->no5)
#define SMOTDSMD0      (*(volatile __near unsigned char  *)0x2B5)
#define SMOTDSMD0_bit  (*(volatile __near __bitf_T *)0x2B5)
#define SMOTDSMD00     (((volatile __near __bitf_T *)0x2B5)->no0)
#define SMOTDSMD01     (((volatile __near __bitf_T *)0x2B5)->no1)
#define SMOTDSMD02     (((volatile __near __bitf_T *)0x2B5)->no2)
#define SMOTDSMD03     (((volatile __near __bitf_T *)0x2B5)->no3)
#define SMOTDSMD04     (((volatile __near __bitf_T *)0x2B5)->no4)
#define SMOTDSMD05     (((volatile __near __bitf_T *)0x2B5)->no5)
#define SMOTDOE0       (*(volatile __near unsigned char  *)0x2B6)
#define SMOTDOE0_bit   (*(volatile __near __bitf_T *)0x2B6)
#define SMOTDOE00      (((volatile __near __bitf_T *)0x2B6)->no0)
#define SMOTDOE01      (((volatile __near __bitf_T *)0x2B6)->no1)
#define SMOTDOE02      (((volatile __near __bitf_T *)0x2B6)->no2)
#define SMOTDCRSA1     (*(volatile __near unsigned char  *)0x2B8)
#define SMOTDCRSB1     (*(volatile __near unsigned char  *)0x2B9)
#define SMOTDTCS1      (*(volatile __near unsigned char  *)0x2BA)
#define SMOTDCR1       (*(volatile __near unsigned char  *)0x2BB)
#define SMOTDCR1_bit   (*(volatile __near __bitf_T *)0x2BB)
#define SMOTDTCE1      (((volatile __near __bitf_T *)0x2BB)->no0)
#define SMOTDPOL1      (((volatile __near __bitf_T *)0x2BB)->no4)
#define SMOTDSMS1      (*(volatile __near unsigned char  *)0x2BC)
#define SMOTDSMS1_bit  (*(volatile __near __bitf_T *)0x2BC)
#define SMOTDSMS10     (((volatile __near __bitf_T *)0x2BC)->no0)
#define SMOTDSMS11     (((volatile __near __bitf_T *)0x2BC)->no1)
#define SMOTDSMS12     (((volatile __near __bitf_T *)0x2BC)->no2)
#define SMOTDSMS13     (((volatile __near __bitf_T *)0x2BC)->no3)
#define SMOTDSMS14     (((volatile __near __bitf_T *)0x2BC)->no4)
#define SMOTDSMS15     (((volatile __near __bitf_T *)0x2BC)->no5)
#define SMOTDSMD1      (*(volatile __near unsigned char  *)0x2BD)
#define SMOTDSMD1_bit  (*(volatile __near __bitf_T *)0x2BD)
#define SMOTDSMD10     (((volatile __near __bitf_T *)0x2BD)->no0)
#define SMOTDSMD11     (((volatile __near __bitf_T *)0x2BD)->no1)
#define SMOTDSMD12     (((volatile __near __bitf_T *)0x2BD)->no2)
#define SMOTDSMD13     (((volatile __near __bitf_T *)0x2BD)->no3)
#define SMOTDSMD14     (((volatile __near __bitf_T *)0x2BD)->no4)
#define SMOTDSMD15     (((volatile __near __bitf_T *)0x2BD)->no5)
#define SMOTDOE1       (*(volatile __near unsigned char  *)0x2BE)
#define SMOTDOE1_bit   (*(volatile __near __bitf_T *)0x2BE)
#define SMOTDOE10      (((volatile __near __bitf_T *)0x2BE)->no0)
#define SMOTDOE11      (((volatile __near __bitf_T *)0x2BE)->no1)
#define SMOTDOE12      (((volatile __near __bitf_T *)0x2BE)->no2)
#define OSDC           (*(volatile __near unsigned short *)0x2D0)
#define HOCOFC         (*(volatile __near unsigned char  *)0x2D8)
#define CRFTRIM        (*(volatile __near unsigned char  *)0x2D9)
#define DTCBAR         (*(volatile __near unsigned char  *)0x2E0)
#define DSCCTL         (*(volatile __near unsigned char  *)0x2E5)
#define DSCCTL_bit     (*(volatile __near __bitf_T *)0x2E5)
#define MCKC           (*(volatile __near unsigned char  *)0x2E6)
#define MCKC_bit       (*(volatile __near __bitf_T *)0x2E6)
#define DTCEN0         (*(volatile __near unsigned char  *)0x2E8)
#define DTCEN0_bit     (*(volatile __near __bitf_T *)0x2E8)
#define DTCEN00        (((volatile __near __bitf_T *)0x2E8)->no0)
#define DTCEN01        (((volatile __near __bitf_T *)0x2E8)->no1)
#define DTCEN02        (((volatile __near __bitf_T *)0x2E8)->no2)
#define DTCEN03        (((volatile __near __bitf_T *)0x2E8)->no3)
#define DTCEN04        (((volatile __near __bitf_T *)0x2E8)->no4)
#define DTCEN05        (((volatile __near __bitf_T *)0x2E8)->no5)
#define DTCEN06        (((volatile __near __bitf_T *)0x2E8)->no6)
#define DTCEN07        (((volatile __near __bitf_T *)0x2E8)->no7)
#define DTCEN1         (*(volatile __near unsigned char  *)0x2E9)
#define DTCEN1_bit     (*(volatile __near __bitf_T *)0x2E9)
#define DTCEN10        (((volatile __near __bitf_T *)0x2E9)->no0)
#define DTCEN11        (((volatile __near __bitf_T *)0x2E9)->no1)
#define DTCEN12        (((volatile __near __bitf_T *)0x2E9)->no2)
#define DTCEN13        (((volatile __near __bitf_T *)0x2E9)->no3)
#define DTCEN14        (((volatile __near __bitf_T *)0x2E9)->no4)
#define DTCEN15        (((volatile __near __bitf_T *)0x2E9)->no5)
#define DTCEN16        (((volatile __near __bitf_T *)0x2E9)->no6)
#define DTCEN17        (((volatile __near __bitf_T *)0x2E9)->no7)
#define DTCEN2         (*(volatile __near unsigned char  *)0x2EA)
#define DTCEN2_bit     (*(volatile __near __bitf_T *)0x2EA)
#define DTCEN20        (((volatile __near __bitf_T *)0x2EA)->no0)
#define DTCEN21        (((volatile __near __bitf_T *)0x2EA)->no1)
#define DTCEN22        (((volatile __near __bitf_T *)0x2EA)->no2)
#define DTCEN23        (((volatile __near __bitf_T *)0x2EA)->no3)
#define DTCEN24        (((volatile __near __bitf_T *)0x2EA)->no4)
#define DTCEN25        (((volatile __near __bitf_T *)0x2EA)->no5)
#define DTCEN26        (((volatile __near __bitf_T *)0x2EA)->no6)
#define DTCEN27        (((volatile __near __bitf_T *)0x2EA)->no7)
#define DTCEN3         (*(volatile __near unsigned char  *)0x2EB)
#define DTCEN3_bit     (*(volatile __near __bitf_T *)0x2EB)
#define DTCEN30        (((volatile __near __bitf_T *)0x2EB)->no0)
#define DTCEN31        (((volatile __near __bitf_T *)0x2EB)->no1)
#define DTCEN32        (((volatile __near __bitf_T *)0x2EB)->no2)
#define DTCEN33        (((volatile __near __bitf_T *)0x2EB)->no3)
#define DTCEN34        (((volatile __near __bitf_T *)0x2EB)->no4)
#define DTCEN35        (((volatile __near __bitf_T *)0x2EB)->no5)
#define DTCEN36        (((volatile __near __bitf_T *)0x2EB)->no6)
#define DTCEN37        (((volatile __near __bitf_T *)0x2EB)->no7)
#define DTCEN4         (*(volatile __near unsigned char  *)0x2EC)
#define DTCEN4_bit     (*(volatile __near __bitf_T *)0x2EC)
#define DTCEN40        (((volatile __near __bitf_T *)0x2EC)->no0)
#define DTCEN41        (((volatile __near __bitf_T *)0x2EC)->no1)
#define DTCEN42        (((volatile __near __bitf_T *)0x2EC)->no2)
#define DTCEN43        (((volatile __near __bitf_T *)0x2EC)->no3)
#define DTCEN44        (((volatile __near __bitf_T *)0x2EC)->no4)
#define DTCEN45        (((volatile __near __bitf_T *)0x2EC)->no5)
#define DTCEN46        (((volatile __near __bitf_T *)0x2EC)->no6)
#define DTCEN47        (((volatile __near __bitf_T *)0x2EC)->no7)
#define DTCEN5         (*(volatile __near unsigned char  *)0x2ED)
#define DTCEN5_bit     (*(volatile __near __bitf_T *)0x2ED)
#define DTCEN50        (((volatile __near __bitf_T *)0x2ED)->no0)
#define DTCEN51        (((volatile __near __bitf_T *)0x2ED)->no1)
#define DTCEN52        (((volatile __near __bitf_T *)0x2ED)->no2)
#define DTCEN53        (((volatile __near __bitf_T *)0x2ED)->no3)
#define DTCEN54        (((volatile __near __bitf_T *)0x2ED)->no4)
#define DTCEN55        (((volatile __near __bitf_T *)0x2ED)->no5)
#define DTCEN56        (((volatile __near __bitf_T *)0x2ED)->no6)
#define DTCEN57        (((volatile __near __bitf_T *)0x2ED)->no7)
#define DTCEN6         (*(volatile __near unsigned char  *)0x2EE)
#define DTCEN6_bit     (*(volatile __near __bitf_T *)0x2EE)
#define DTCEN60        (((volatile __near __bitf_T *)0x2EE)->no0)
#define DTCEN61        (((volatile __near __bitf_T *)0x2EE)->no1)
#define DTCEN62        (((volatile __near __bitf_T *)0x2EE)->no2)
#define DTCEN63        (((volatile __near __bitf_T *)0x2EE)->no3)
#define DTCEN64        (((volatile __near __bitf_T *)0x2EE)->no4)
#define DTCEN65        (((volatile __near __bitf_T *)0x2EE)->no5)
#define DTCEN66        (((volatile __near __bitf_T *)0x2EE)->no6)
#define DTCEN67        (((volatile __near __bitf_T *)0x2EE)->no7)
#define CRC0CTL        (*(volatile __near unsigned char  *)0x2F0)
#define CRC0CTL_bit    (*(volatile __near __bitf_T *)0x2F0)
#define CRC0EN         (((volatile __near __bitf_T *)0x2F0)->no7)
#define PGCRCL         (*(volatile __near unsigned short *)0x2F2)
#define CRCD           (*(volatile __near unsigned short *)0x2FA)
#define PFSEG0         (*(volatile __near unsigned char  *)0x300)
#define PFSEG0_bit     (*(volatile __near __bitf_T *)0x300)
#define PFSEG1         (*(volatile __near unsigned char  *)0x301)
#define PFSEG1_bit     (*(volatile __near __bitf_T *)0x301)
#define PFSEG2         (*(volatile __near unsigned char  *)0x302)
#define PFSEG2_bit     (*(volatile __near __bitf_T *)0x302)
#define PFSEG3         (*(volatile __near unsigned char  *)0x303)
#define PFSEG3_bit     (*(volatile __near __bitf_T *)0x303)
#define PFSEG4         (*(volatile __near unsigned char  *)0x304)
#define PFSEG4_bit     (*(volatile __near __bitf_T *)0x304)
#define PFSEG5         (*(volatile __near unsigned char  *)0x305)
#define PFSEG5_bit     (*(volatile __near __bitf_T *)0x305)
#define PFSEG6         (*(volatile __near unsigned char  *)0x306)
#define PFSEG6_bit     (*(volatile __near __bitf_T *)0x306)
#define ISCLCD         (*(volatile __near unsigned char  *)0x308)
#define ISCLCD_bit     (*(volatile __near __bitf_T *)0x308)
#define FMCRL          (*(volatile __near unsigned short *)0x312)
#define FMCRH          (*(volatile __near unsigned short *)0x314)
#define FMCTL          (*(volatile __near unsigned char  *)0x316)
#define FMCTL_bit      (*(volatile __near __bitf_T *)0x316)
#define FMS            (((volatile __near __bitf_T *)0x316)->no7)
#define LVDVDD         (*(volatile __near unsigned char  *)0x332)
#define LVDVDD_bit     (*(volatile __near __bitf_T *)0x332)
#define LVDVDDF        (((volatile __near __bitf_T *)0x332)->no6)
#define LVDVDDEN       (((volatile __near __bitf_T *)0x332)->no7)
#define LVDVBAT        (*(volatile __near unsigned char  *)0x333)
#define LVDVBAT_bit    (*(volatile __near __bitf_T *)0x333)
#define LVDVBATF       (((volatile __near __bitf_T *)0x333)->no6)
#define LVDVBATEN      (((volatile __near __bitf_T *)0x333)->no7)
#define LVDVRTC        (*(volatile __near unsigned char  *)0x334)
#define LVDVRTC_bit    (*(volatile __near __bitf_T *)0x334)
#define LVDVRTCF       (((volatile __near __bitf_T *)0x334)->no6)
#define LVDVRTCEN      (((volatile __near __bitf_T *)0x334)->no7)
#define LVDEXLVD       (*(volatile __near unsigned char  *)0x335)
#define LVDEXLVD_bit   (*(volatile __near __bitf_T *)0x335)
#define LVDEXLVDF      (((volatile __near __bitf_T *)0x335)->no6)
#define LVDEXLVDEN     (((volatile __near __bitf_T *)0x335)->no7)
#define TRTCMP0        (*(volatile __near unsigned short *)0x350)
#define TRTCMP00       (*(volatile __near unsigned char  *)0x350)
#define TRTCMP01       (*(volatile __near unsigned char  *)0x351)
#define TRTCR0         (*(volatile __near unsigned char  *)0x352)
#define TRTCR0_bit     (*(volatile __near __bitf_T *)0x352)
#define TSTART00       (((volatile __near __bitf_T *)0x352)->no0)
#define TSTART01       (((volatile __near __bitf_T *)0x352)->no2)
#define TRTMD0         (*(volatile __near unsigned char  *)0x353)
#define TRTCMP1        (*(volatile __near unsigned short *)0x358)
#define TRTCMP10       (*(volatile __near unsigned char  *)0x358)
#define TRTCMP11       (*(volatile __near unsigned char  *)0x359)
#define TRTCR1         (*(volatile __near unsigned char  *)0x35A)
#define TRTCR1_bit     (*(volatile __near __bitf_T *)0x35A)
#define TSTART10       (((volatile __near __bitf_T *)0x35A)->no0)
#define TSTART11       (((volatile __near __bitf_T *)0x35A)->no2)
#define TRTMD1         (*(volatile __near unsigned char  *)0x35B)
#define TRTCMP2        (*(volatile __near unsigned short *)0x360)
#define TRTCMP20       (*(volatile __near unsigned char  *)0x360)
#define TRTCMP21       (*(volatile __near unsigned char  *)0x361)
#define TRTCR2         (*(volatile __near unsigned char  *)0x362)
#define TRTCR2_bit     (*(volatile __near __bitf_T *)0x362)
#define TSTART20       (((volatile __near __bitf_T *)0x362)->no0)
#define TSTART21       (((volatile __near __bitf_T *)0x362)->no2)
#define TRTMD2         (*(volatile __near unsigned char  *)0x363)
#define TRTCMP3        (*(volatile __near unsigned short *)0x368)
#define TRTCMP30       (*(volatile __near unsigned char  *)0x368)
#define TRTCMP31       (*(volatile __near unsigned char  *)0x369)
#define TRTCR3         (*(volatile __near unsigned char  *)0x36A)
#define TRTCR3_bit     (*(volatile __near __bitf_T *)0x36A)
#define TSTART30       (((volatile __near __bitf_T *)0x36A)->no0)
#define TSTART31       (((volatile __near __bitf_T *)0x36A)->no2)
#define TRTMD3         (*(volatile __near unsigned char  *)0x36B)
#define RTCPORSR       (*(volatile __near unsigned char  *)0x380)
#define RTCICNFEN      (*(volatile __near unsigned char  *)0x382)
#define SCMC           (*(volatile __near unsigned char  *)0x384)
#define SCSC           (*(volatile __near unsigned char  *)0x386)
#define SCSC_bit       (*(volatile __near __bitf_T *)0x386)
#define XTSTOP         (((volatile __near __bitf_T *)0x386)->no6)
#define IRCR           (*(volatile __near unsigned char  *)0x3A0)
#define IRCR_bit       (*(volatile __near __bitf_T *)0x3A0)
#define IRRXINV        (((volatile __near __bitf_T *)0x3A0)->no2)
#define IRTXINV        (((volatile __near __bitf_T *)0x3A0)->no3)
#define IRE            (((volatile __near __bitf_T *)0x3A0)->no7)
#define TMPCTL         (*(volatile __near unsigned char  *)0x3B0)
#define TMPCTL_bit     (*(volatile __near __bitf_T *)0x3B0)
#define TMPEN          (((volatile __near __bitf_T *)0x3B0)->no7)
#define SEG0           (*(volatile __near unsigned char  *)0x400)
#define SEG1           (*(volatile __near unsigned char  *)0x401)
#define SEG2           (*(volatile __near unsigned char  *)0x402)
#define SEG3           (*(volatile __near unsigned char  *)0x403)
#define SEG4           (*(volatile __near unsigned char  *)0x404)
#define SEG5           (*(volatile __near unsigned char  *)0x405)
#define SEG6           (*(volatile __near unsigned char  *)0x406)
#define SEG7           (*(volatile __near unsigned char  *)0x407)
#define SEG8           (*(volatile __near unsigned char  *)0x408)
#define SEG9           (*(volatile __near unsigned char  *)0x409)
#define SEG10          (*(volatile __near unsigned char  *)0x40A)
#define SEG11          (*(volatile __near unsigned char  *)0x40B)
#define SEG12          (*(volatile __near unsigned char  *)0x40C)
#define SEG13          (*(volatile __near unsigned char  *)0x40D)
#define SEG14          (*(volatile __near unsigned char  *)0x40E)
#define SEG15          (*(volatile __near unsigned char  *)0x40F)
#define SEG16          (*(volatile __near unsigned char  *)0x410)
#define SEG17          (*(volatile __near unsigned char  *)0x411)
#define SEG18          (*(volatile __near unsigned char  *)0x412)
#define SEG19          (*(volatile __near unsigned char  *)0x413)
#define SEG20          (*(volatile __near unsigned char  *)0x414)
#define SEG21          (*(volatile __near unsigned char  *)0x415)
#define SEG22          (*(volatile __near unsigned char  *)0x416)
#define SEG23          (*(volatile __near unsigned char  *)0x417)
#define SEG24          (*(volatile __near unsigned char  *)0x418)
#define SEG25          (*(volatile __near unsigned char  *)0x419)
#define SEG26          (*(volatile __near unsigned char  *)0x41A)
#define SEG27          (*(volatile __near unsigned char  *)0x41B)
#define SEG28          (*(volatile __near unsigned char  *)0x41C)
#define SEG29          (*(volatile __near unsigned char  *)0x41D)
#define SEG30          (*(volatile __near unsigned char  *)0x41E)
#define SEG31          (*(volatile __near unsigned char  *)0x41F)
#define SEG32          (*(volatile __near unsigned char  *)0x420)
#define SEG33          (*(volatile __near unsigned char  *)0x421)
#define SEG34          (*(volatile __near unsigned char  *)0x422)
#define SEG35          (*(volatile __near unsigned char  *)0x423)
#define SEG36          (*(volatile __near unsigned char  *)0x424)
#define SEG37          (*(volatile __near unsigned char  *)0x425)
#define SEG38          (*(volatile __near unsigned char  *)0x426)
#define SEG39          (*(volatile __near unsigned char  *)0x427)
#define SEG40          (*(volatile __near unsigned char  *)0x428)
#define SEG41          (*(volatile __near unsigned char  *)0x429)
#define TRT0           (*(volatile __near unsigned short *)0x540)
#define TRT00          (*(volatile __near unsigned char  *)0x540)
#define TRT01          (*(volatile __near unsigned char  *)0x541)
#define TRT1           (*(volatile __near unsigned short *)0x548)
#define TRT10          (*(volatile __near unsigned char  *)0x548)
#define TRT11          (*(volatile __near unsigned char  *)0x549)
#define TRT2           (*(volatile __near unsigned short *)0x550)
#define TRT20          (*(volatile __near unsigned char  *)0x550)
#define TRT21          (*(volatile __near unsigned char  *)0x551)
#define TRT3           (*(volatile __near unsigned short *)0x558)
#define TRT30          (*(volatile __near unsigned char  *)0x558)
#define TRT31          (*(volatile __near unsigned char  *)0x559)
#define TRJ0           (*(volatile __near unsigned short *)0x560)
#define TRJ1           (*(volatile __near unsigned short *)0x562)
#define R64CNT         (*(volatile __near unsigned char  *)0x581)
#define BCNT0          (*(volatile __near unsigned char  *)0x583)
#define RSECCNT        (*(volatile __near unsigned char  *)0x583)
#define BCNT1          (*(volatile __near unsigned char  *)0x585)
#define RMINCNT        (*(volatile __near unsigned char  *)0x585)
#define BCNT2          (*(volatile __near unsigned char  *)0x587)
#define RHRCNT         (*(volatile __near unsigned char  *)0x587)
#define BCNT3          (*(volatile __near unsigned char  *)0x589)
#define RWKCNT         (*(volatile __near unsigned char  *)0x589)
#define RDAYCNT        (*(volatile __near unsigned char  *)0x58B)
#define RMONCNT        (*(volatile __near unsigned char  *)0x58D)
#define RYRCNT         (*(volatile __near unsigned short *)0x58E)
#define BCNT0AR0       (*(volatile __near unsigned char  *)0x591)
#define RSECAR0        (*(volatile __near unsigned char  *)0x591)
#define BCNT1AR0       (*(volatile __near unsigned char  *)0x593)
#define RMINAR0        (*(volatile __near unsigned char  *)0x593)
#define BCNT2AR0       (*(volatile __near unsigned char  *)0x595)
#define RHRAR0         (*(volatile __near unsigned char  *)0x595)
#define BCNT3AR0       (*(volatile __near unsigned char  *)0x597)
#define RWKAR0         (*(volatile __near unsigned char  *)0x597)
#define BCNT0AER0      (*(volatile __near unsigned char  *)0x599)
#define RDAYAR0        (*(volatile __near unsigned char  *)0x599)
#define BCNT1AER0      (*(volatile __near unsigned char  *)0x59B)
#define RMONAR0        (*(volatile __near unsigned char  *)0x59B)
#define BCNT2AER0      (*(volatile __near unsigned short *)0x59C)
#define RYRAR0         (*(volatile __near unsigned short *)0x59C)
#define BCNT3AER0      (*(volatile __near unsigned char  *)0x59F)
#define RYRAREN0       (*(volatile __near unsigned char  *)0x59F)
#define RYRAREN0_bit   (*(volatile __near __bitf_T *)0x59F)
#define RSR            (*(volatile __near unsigned char  *)0x5A1)
#define RSR_bit        (*(volatile __near __bitf_T *)0x5A1)
#define RCR1           (*(volatile __near unsigned char  *)0x5A3)
#define RCR2           (*(volatile __near unsigned char  *)0x5A5)
#define RCR3           (*(volatile __near unsigned char  *)0x5A7)
#define RCR4           (*(volatile __near unsigned char  *)0x5A9)
#define RADJ           (*(volatile __near unsigned char  *)0x5AF)
#define BCNT0AR1       (*(volatile __near unsigned char  *)0x5B1)
#define RSECAR1        (*(volatile __near unsigned char  *)0x5B1)
#define BCNT1AR1       (*(volatile __near unsigned char  *)0x5B3)
#define RMINAR1        (*(volatile __near unsigned char  *)0x5B3)
#define BCNT2AR1       (*(volatile __near unsigned char  *)0x5B5)
#define RHRAR1         (*(volatile __near unsigned char  *)0x5B5)
#define BCNT3AR1       (*(volatile __near unsigned char  *)0x5B7)
#define RWKAR1         (*(volatile __near unsigned char  *)0x5B7)
#define BCNT0AER1      (*(volatile __near unsigned char  *)0x5B9)
#define RDAYAR1        (*(volatile __near unsigned char  *)0x5B9)
#define BCNT1AER1      (*(volatile __near unsigned char  *)0x5BB)
#define RMONAR1        (*(volatile __near unsigned char  *)0x5BB)
#define BCNT2AER1      (*(volatile __near unsigned short *)0x5BC)
#define RYRAR1         (*(volatile __near unsigned short *)0x5BC)
#define BCNT3AER1      (*(volatile __near unsigned char  *)0x5BF)
#define RYRAREN1       (*(volatile __near unsigned char  *)0x5BF)
#define RYRAREN1_bit   (*(volatile __near __bitf_T *)0x5BF)
#define RTCCR0         (*(volatile __near unsigned char  *)0x5C1)
#define RTCCR0_bit     (*(volatile __near __bitf_T *)0x5C1)
#define RTCCR1         (*(volatile __near unsigned char  *)0x5C3)
#define RTCCR1_bit     (*(volatile __near __bitf_T *)0x5C3)
#define RTCCR2         (*(volatile __near unsigned char  *)0x5C5)
#define RTCCR2_bit     (*(volatile __near __bitf_T *)0x5C5)
#define BCNT0CP0       (*(volatile __near unsigned char  *)0x5D3)
#define RSECCP0        (*(volatile __near unsigned char  *)0x5D3)
#define BCNT1CP0       (*(volatile __near unsigned char  *)0x5D5)
#define RMINCP0        (*(volatile __near unsigned char  *)0x5D5)
#define BCNT2CP0       (*(volatile __near unsigned char  *)0x5D7)
#define RHRCP0         (*(volatile __near unsigned char  *)0x5D7)
#define BCNT3CP0       (*(volatile __near unsigned char  *)0x5DB)
#define RDAYCP0        (*(volatile __near unsigned char  *)0x5DB)
#define RMONCP0        (*(volatile __near unsigned char  *)0x5DD)
#define BCNT0CP1       (*(volatile __near unsigned char  *)0x5E3)
#define RSECCP1        (*(volatile __near unsigned char  *)0x5E3)
#define BCNT1CP1       (*(volatile __near unsigned char  *)0x5E5)
#define RMINCP1        (*(volatile __near unsigned char  *)0x5E5)
#define BCNT2CP1       (*(volatile __near unsigned char  *)0x5E7)
#define RHRCP1         (*(volatile __near unsigned char  *)0x5E7)
#define BCNT3CP1       (*(volatile __near unsigned char  *)0x5EB)
#define RDAYCP1        (*(volatile __near unsigned char  *)0x5EB)
#define RMONCP1        (*(volatile __near unsigned char  *)0x5ED)
#define BCNT0CP2       (*(volatile __near unsigned char  *)0x5F3)
#define RSECCP2        (*(volatile __near unsigned char  *)0x5F3)
#define BCNT1CP2       (*(volatile __near unsigned char  *)0x5F5)
#define RMINCP2        (*(volatile __near unsigned char  *)0x5F5)
#define BCNT2CP2       (*(volatile __near unsigned char  *)0x5F7)
#define RHRCP2         (*(volatile __near unsigned char  *)0x5F7)
#define BCNT3CP2       (*(volatile __near unsigned char  *)0x5FB)
#define RDAYCP2        (*(volatile __near unsigned char  *)0x5FB)
#define RMONCP2        (*(volatile __near unsigned char  *)0x5FD)
#define ADCSR          (*(volatile __near unsigned short *)0x600)
#define ADANSA0        (*(volatile __near unsigned short *)0x604)
#define ADADS0         (*(volatile __near unsigned short *)0x608)
#define ADADC          (*(volatile __near unsigned char  *)0x60C)
#define ADADC_bit      (*(volatile __near __bitf_T *)0x60C)
#define AVEE           (((volatile __near __bitf_T *)0x60C)->no7)
#define ADCER          (*(volatile __near unsigned short *)0x60E)
#define ADSTRGR        (*(volatile __near unsigned short *)0x610)
#define ADEXICR        (*(volatile __near unsigned short *)0x612)
#define ADTSDR         (*(volatile __near unsigned short *)0x61A)
#define ADOCDR         (*(volatile __near unsigned short *)0x61C)
#define ADRD           (*(volatile __near unsigned short *)0x61E)
#define ADDR0          (*(volatile __near unsigned short *)0x620)
#define ADDR1          (*(volatile __near unsigned short *)0x622)
#define ADDR2          (*(volatile __near unsigned short *)0x624)
#define ADDR3          (*(volatile __near unsigned short *)0x626)
#define ADDR4          (*(volatile __near unsigned short *)0x628)
#define ADDR5          (*(volatile __near unsigned short *)0x62A)
#define ADSHCR         (*(volatile __near unsigned short *)0x666)
#define ADHVREFCNT     (*(volatile __near unsigned char  *)0x68A)
#define ADHVREFCNT_bit (*(volatile __near __bitf_T *)0x68A)
#define ADSLP          (((volatile __near __bitf_T *)0x68A)->no7)
#define ADSSTRT        (*(volatile __near unsigned char  *)0x6DE)
#define ADSSTRO        (*(volatile __near unsigned char  *)0x6DF)
#define ADSSTR0        (*(volatile __near unsigned char  *)0x6E0)
#define ADSSTR1        (*(volatile __near unsigned char  *)0x6E1)
#define ADSSTR2        (*(volatile __near unsigned char  *)0x6E2)
#define ADSSTR3        (*(volatile __near unsigned char  *)0x6E3)
#define ADSSTR4        (*(volatile __near unsigned char  *)0x6E4)
#define ADSSTR5        (*(volatile __near unsigned char  *)0x6E5)
#define DSADMR         (*(volatile __near unsigned short *)0x740)
#define DSADGCR0       (*(volatile __near unsigned char  *)0x742)
#define DSADGCR1       (*(volatile __near unsigned char  *)0x743)
#define DSADHPFCR      (*(volatile __near unsigned char  *)0x745)
#define DSADDECCR      (*(volatile __near unsigned char  *)0x746)
#define DSADDECCR_bit  (*(volatile __near __bitf_T *)0x746)
#define DSADDECSEL     (((volatile __near __bitf_T *)0x746)->no0)
#define DSADDECEN      (((volatile __near __bitf_T *)0x746)->no7)
#define DSADPHCR0      (*(volatile __near unsigned short *)0x750)
#define DSADPHCR1      (*(volatile __near unsigned short *)0x752)
#define DSADPHCR2      (*(volatile __near unsigned short *)0x754)
#define DSADPHCR3      (*(volatile __near unsigned short *)0x756)
#define DSADCR0        (*(volatile __near unsigned short *)0x760)
#define DSADCR0L       (*(volatile __near unsigned char  *)0x760)
#define DSADCR0M       (*(volatile __near unsigned char  *)0x761)
#define DSADCR0H       (*(volatile __near unsigned char  *)0x762)
#define DSADCR1        (*(volatile __near unsigned short *)0x764)
#define DSADCR1L       (*(volatile __near unsigned char  *)0x764)
#define DSADCR1M       (*(volatile __near unsigned char  *)0x765)
#define DSADCR1H       (*(volatile __near unsigned char  *)0x766)
#define DSADCR2        (*(volatile __near unsigned short *)0x768)
#define DSADCR2L       (*(volatile __near unsigned char  *)0x768)
#define DSADCR2M       (*(volatile __near unsigned char  *)0x769)
#define DSADCR2H       (*(volatile __near unsigned char  *)0x76A)
#define DSADCR3        (*(volatile __near unsigned short *)0x76C)
#define DSADCR3L       (*(volatile __near unsigned char  *)0x76C)
#define DSADCR3M       (*(volatile __near unsigned char  *)0x76D)
#define DSADCR3H       (*(volatile __near unsigned char  *)0x76E)
#define DSADCRLPF0     (*(volatile __near unsigned short *)0x770)
#define DSADCRLPF0L    (*(volatile __near unsigned char  *)0x770)
#define DSADCRLPF0M    (*(volatile __near unsigned char  *)0x771)
#define DSADCRLPF0H    (*(volatile __near unsigned char  *)0x772)
#define DSADCRLPF1     (*(volatile __near unsigned short *)0x774)
#define DSADCRLPF1L    (*(volatile __near unsigned char  *)0x774)
#define DSADCRLPF1M    (*(volatile __near unsigned char  *)0x775)
#define DSADCRLPF1H    (*(volatile __near unsigned char  *)0x776)
#define DSADCRLPF2     (*(volatile __near unsigned short *)0x778)
#define DSADCRLPF2L    (*(volatile __near unsigned char  *)0x778)
#define DSADCRLPF2M    (*(volatile __near unsigned char  *)0x779)
#define DSADCRLPF2H    (*(volatile __near unsigned char  *)0x77A)
#define DSADCRLPF3     (*(volatile __near unsigned short *)0x77C)
#define DSADCRLPF3L    (*(volatile __near unsigned char  *)0x77C)
#define DSADCRLPF3M    (*(volatile __near unsigned char  *)0x77D)
#define DSADCRLPF3H    (*(volatile __near unsigned char  *)0x77E)
#define P0             (*(volatile __near unsigned char  *)0xFF00)
#define P0_bit         (*(volatile __near __bitf_T *)0xFF00)
#define P1             (*(volatile __near unsigned char  *)0xFF01)
#define P1_bit         (*(volatile __near __bitf_T *)0xFF01)
#define P2             (*(volatile __near unsigned char  *)0xFF02)
#define P2_bit         (*(volatile __near __bitf_T *)0xFF02)
#define P3             (*(volatile __near unsigned char  *)0xFF03)
#define P3_bit         (*(volatile __near __bitf_T *)0xFF03)
#define P4             (*(volatile __near unsigned char  *)0xFF04)
#define P4_bit         (*(volatile __near __bitf_T *)0xFF04)
#define P5             (*(volatile __near unsigned char  *)0xFF05)
#define P5_bit         (*(volatile __near __bitf_T *)0xFF05)
#define P6             (*(volatile __near unsigned char  *)0xFF06)
#define P6_bit         (*(volatile __near __bitf_T *)0xFF06)
#define P7             (*(volatile __near unsigned char  *)0xFF07)
#define P7_bit         (*(volatile __near __bitf_T *)0xFF07)
#define P8             (*(volatile __near unsigned char  *)0xFF08)
#define P8_bit         (*(volatile __near __bitf_T *)0xFF08)
#define P9             (*(volatile __near unsigned char  *)0xFF09)
#define P9_bit         (*(volatile __near __bitf_T *)0xFF09)
#define P12            (*(volatile __near unsigned char  *)0xFF0C)
#define P12_bit        (*(volatile __near __bitf_T *)0xFF0C)
#define P13            (*(volatile __near unsigned char  *)0xFF0D)
#define P13_bit        (*(volatile __near __bitf_T *)0xFF0D)
#define P15            (*(volatile __near unsigned char  *)0xFF0F)
#define P15_bit        (*(volatile __near __bitf_T *)0xFF0F)
#define SDR00          (*(volatile __near unsigned short *)0xFF10)
#define SIO00          (*(volatile __near unsigned char  *)0xFF10)
#define TXD0           (*(volatile __near unsigned char  *)0xFF10)
#define SDR01          (*(volatile __near unsigned short *)0xFF12)
#define RXD0           (*(volatile __near unsigned char  *)0xFF12)
#define SDR12          (*(volatile __near unsigned short *)0xFF14)
#define SIO30          (*(volatile __near unsigned char  *)0xFF14)
#define TXD3           (*(volatile __near unsigned char  *)0xFF14)
#define SDR13          (*(volatile __near unsigned short *)0xFF16)
#define RXD3           (*(volatile __near unsigned char  *)0xFF16)
#define TDR00          (*(volatile __near unsigned short *)0xFF18)
#define TDR01          (*(volatile __near unsigned short *)0xFF1A)
#define TDR01L         (*(volatile __near unsigned char  *)0xFF1A)
#define TDR01H         (*(volatile __near unsigned char  *)0xFF1B)
#define PM0            (*(volatile __near unsigned char  *)0xFF20)
#define PM0_bit        (*(volatile __near __bitf_T *)0xFF20)
#define PM1            (*(volatile __near unsigned char  *)0xFF21)
#define PM1_bit        (*(volatile __near __bitf_T *)0xFF21)
#define PM2            (*(volatile __near unsigned char  *)0xFF22)
#define PM2_bit        (*(volatile __near __bitf_T *)0xFF22)
#define PM3            (*(volatile __near unsigned char  *)0xFF23)
#define PM3_bit        (*(volatile __near __bitf_T *)0xFF23)
#define PM4            (*(volatile __near unsigned char  *)0xFF24)
#define PM4_bit        (*(volatile __near __bitf_T *)0xFF24)
#define PM5            (*(volatile __near unsigned char  *)0xFF25)
#define PM5_bit        (*(volatile __near __bitf_T *)0xFF25)
#define PM6            (*(volatile __near unsigned char  *)0xFF26)
#define PM6_bit        (*(volatile __near __bitf_T *)0xFF26)
#define PM7            (*(volatile __near unsigned char  *)0xFF27)
#define PM7_bit        (*(volatile __near __bitf_T *)0xFF27)
#define PM8            (*(volatile __near unsigned char  *)0xFF28)
#define PM8_bit        (*(volatile __near __bitf_T *)0xFF28)
#define PM9            (*(volatile __near unsigned char  *)0xFF29)
#define PM9_bit        (*(volatile __near __bitf_T *)0xFF29)
#define PM12           (*(volatile __near unsigned char  *)0xFF2C)
#define PM12_bit       (*(volatile __near __bitf_T *)0xFF2C)
#define PM15           (*(volatile __near unsigned char  *)0xFF2F)
#define PM15_bit       (*(volatile __near __bitf_T *)0xFF2F)
#define KRCTL          (*(volatile __near unsigned char  *)0xFF34)
#define KRCTL_bit      (*(volatile __near __bitf_T *)0xFF34)
#define KREG           (((volatile __near __bitf_T *)0xFF34)->no0)
#define KRMD           (((volatile __near __bitf_T *)0xFF34)->no7)
#define KRF            (*(volatile __near unsigned char  *)0xFF35)
#define KRM0           (*(volatile __near unsigned char  *)0xFF37)
#define KRM0_bit       (*(volatile __near __bitf_T *)0xFF37)
#define EGP0           (*(volatile __near unsigned char  *)0xFF38)
#define EGP0_bit       (*(volatile __near __bitf_T *)0xFF38)
#define EGN0           (*(volatile __near unsigned char  *)0xFF39)
#define EGN0_bit       (*(volatile __near __bitf_T *)0xFF39)
#define EGP1           (*(volatile __near unsigned char  *)0xFF3A)
#define EGP1_bit       (*(volatile __near __bitf_T *)0xFF3A)
#define EGN1           (*(volatile __near unsigned char  *)0xFF3B)
#define EGN1_bit       (*(volatile __near __bitf_T *)0xFF3B)
#define MULBL          (*(volatile __near unsigned short *)0xFF3C)
#define MULBH          (*(volatile __near unsigned short *)0xFF3E)
#define LCDM0          (*(volatile __near unsigned char  *)0xFF40)
#define LCDM1          (*(volatile __near unsigned char  *)0xFF41)
#define LCDM1_bit      (*(volatile __near __bitf_T *)0xFF41)
#define LCDVLM         (((volatile __near __bitf_T *)0xFF41)->no0)
#define LCDSEL         (((volatile __near __bitf_T *)0xFF41)->no3)
#define BLON           (((volatile __near __bitf_T *)0xFF41)->no4)
#define VLCON          (((volatile __near __bitf_T *)0xFF41)->no5)
#define SCOC           (((volatile __near __bitf_T *)0xFF41)->no6)
#define LCDON          (((volatile __near __bitf_T *)0xFF41)->no7)
#define LCDC0          (*(volatile __near unsigned char  *)0xFF42)
#define VLCD           (*(volatile __near unsigned char  *)0xFF43)
#define SDR02          (*(volatile __near unsigned short *)0xFF44)
#define SIO10          (*(volatile __near unsigned char  *)0xFF44)
#define TXD1           (*(volatile __near unsigned char  *)0xFF44)
#define SDR03          (*(volatile __near unsigned short *)0xFF46)
#define RXD1           (*(volatile __near unsigned char  *)0xFF46)
#define SDR10          (*(volatile __near unsigned short *)0xFF48)
#define TXD2           (*(volatile __near unsigned char  *)0xFF48)
#define SDR11          (*(volatile __near unsigned short *)0xFF4A)
#define RXD2           (*(volatile __near unsigned char  *)0xFF4A)
#define IICA0          (*(volatile __near unsigned char  *)0xFF50)
#define IICS0          (*(volatile __near unsigned char  *)0xFF51)
#define IICS0_bit      (*(volatile __near __bitf_T *)0xFF51)
#define SPD0           (((volatile __near __bitf_T *)0xFF51)->no0)
#define STD0           (((volatile __near __bitf_T *)0xFF51)->no1)
#define ACKD0          (((volatile __near __bitf_T *)0xFF51)->no2)
#define TRC0           (((volatile __near __bitf_T *)0xFF51)->no3)
#define COI0           (((volatile __near __bitf_T *)0xFF51)->no4)
#define EXC0           (((volatile __near __bitf_T *)0xFF51)->no5)
#define ALD0           (((volatile __near __bitf_T *)0xFF51)->no6)
#define MSTS0          (((volatile __near __bitf_T *)0xFF51)->no7)
#define IICF0          (*(volatile __near unsigned char  *)0xFF52)
#define IICF0_bit      (*(volatile __near __bitf_T *)0xFF52)
#define IICRSV0        (((volatile __near __bitf_T *)0xFF52)->no0)
#define STCEN0         (((volatile __near __bitf_T *)0xFF52)->no1)
#define IICBSY0        (((volatile __near __bitf_T *)0xFF52)->no6)
#define STCF0          (((volatile __near __bitf_T *)0xFF52)->no7)
#define SDR20          (*(volatile __near unsigned short *)0xFF58)
#define TXD4           (*(volatile __near unsigned char  *)0xFF58)
#define SDR21          (*(volatile __near unsigned short *)0xFF5A)
#define RXD4           (*(volatile __near unsigned char  *)0xFF5A)
#define TDR02          (*(volatile __near unsigned short *)0xFF64)
#define TDR03          (*(volatile __near unsigned short *)0xFF66)
#define TDR03L         (*(volatile __near unsigned char  *)0xFF66)
#define TDR03H         (*(volatile __near unsigned char  *)0xFF67)
#define TDR04          (*(volatile __near unsigned short *)0xFF68)
#define TDR05          (*(volatile __near unsigned short *)0xFF6A)
#define TDR06          (*(volatile __near unsigned short *)0xFF6C)
#define TDR07          (*(volatile __near unsigned short *)0xFF6E)
#define ITMC           (*(volatile __near unsigned short *)0xFF90)
#define CMC            (*(volatile __near unsigned char  *)0xFFA0)
#define CSC            (*(volatile __near unsigned char  *)0xFFA1)
#define CSC_bit        (*(volatile __near __bitf_T *)0xFFA1)
#define HIOSTOP        (((volatile __near __bitf_T *)0xFFA1)->no0)
#define MIOEN          (((volatile __near __bitf_T *)0xFFA1)->no1)
#define XT1SELDIS      (((volatile __near __bitf_T *)0xFFA1)->no6)
#define MSTOP          (((volatile __near __bitf_T *)0xFFA1)->no7)
#define OSTC           (*(volatile __near unsigned char  *)0xFFA2)
#define OSTC_bit       (*(volatile __near __bitf_T *)0xFFA2)
#define OSTS           (*(volatile __near unsigned char  *)0xFFA3)
#define CKC            (*(volatile __near unsigned char  *)0xFFA4)
#define CKC_bit        (*(volatile __near __bitf_T *)0xFFA4)
#define MCM1           (((volatile __near __bitf_T *)0xFFA4)->no0)
#define MCS1           (((volatile __near __bitf_T *)0xFFA4)->no1)
#define MCM0           (((volatile __near __bitf_T *)0xFFA4)->no4)
#define MCS            (((volatile __near __bitf_T *)0xFFA4)->no5)
#define CSS            (((volatile __near __bitf_T *)0xFFA4)->no6)
#define CLS            (((volatile __near __bitf_T *)0xFFA4)->no7)
#define CKS0           (*(volatile __near unsigned char  *)0xFFA5)
#define CKS0_bit       (*(volatile __near __bitf_T *)0xFFA5)
#define PCLOE0         (((volatile __near __bitf_T *)0xFFA5)->no7)
#define CKS1           (*(volatile __near unsigned char  *)0xFFA6)
#define CKS1_bit       (*(volatile __near __bitf_T *)0xFFA6)
#define PCLOE1         (((volatile __near __bitf_T *)0xFFA6)->no7)
#define CKSEL          (*(volatile __near unsigned char  *)0xFFA7)
#define CKSEL_bit      (*(volatile __near __bitf_T *)0xFFA7)
#define SELLOSC        (((volatile __near __bitf_T *)0xFFA7)->no0)
#define RESF           (*(volatile __near unsigned char  *)0xFFA8)
#define LVIM           (*(volatile __near unsigned char  *)0xFFA9)
#define LVIM_bit       (*(volatile __near __bitf_T *)0xFFA9)
#define LVIF           (((volatile __near __bitf_T *)0xFFA9)->no0)
#define LVIOMSK        (((volatile __near __bitf_T *)0xFFA9)->no1)
#define LVISEN         (((volatile __near __bitf_T *)0xFFA9)->no7)
#define LVIS           (*(volatile __near unsigned char  *)0xFFAA)
#define LVIS_bit       (*(volatile __near __bitf_T *)0xFFAA)
#define LVILV          (((volatile __near __bitf_T *)0xFFAA)->no0)
#define LVIMD          (((volatile __near __bitf_T *)0xFFAA)->no7)
#define WDTE           (*(volatile __near unsigned char  *)0xFFAB)
#define CRCIN          (*(volatile __near unsigned char  *)0xFFAC)
#define IF2            (*(volatile __near unsigned short *)0xFFD0)
#define IF2L           (*(volatile __near unsigned char  *)0xFFD0)
#define IF2L_bit       (*(volatile __near __bitf_T *)0xFFD0)
#define IF2H           (*(volatile __near unsigned char  *)0xFFD1)
#define IF2H_bit       (*(volatile __near __bitf_T *)0xFFD1)
#define DSAIF          (((volatile __near __bitf_T *)0xFFD0)->no0)
#define SMPIF05        (((volatile __near __bitf_T *)0xFFD0)->no0)
#define SMPIF15        (((volatile __near __bitf_T *)0xFFD0)->no0)
#define TMIF04         (((volatile __near __bitf_T *)0xFFD0)->no1)
#define SMOTAIF0       (((volatile __near __bitf_T *)0xFFD0)->no2)
#define TMIF05         (((volatile __near __bitf_T *)0xFFD0)->no2)
#define PIF6           (((volatile __near __bitf_T *)0xFFD0)->no3)
#define PIF7           (((volatile __near __bitf_T *)0xFFD0)->no4)
#define PIF12          (((volatile __near __bitf_T *)0xFFD0)->no5)
#define RTCIIF2        (((volatile __near __bitf_T *)0xFFD0)->no5)
#define PIF13          (((volatile __near __bitf_T *)0xFFD0)->no6)
#define RTCIIF1        (((volatile __near __bitf_T *)0xFFD0)->no6)
#define RTCIIF0        (((volatile __near __bitf_T *)0xFFD0)->no7)
#define PIF14          (((volatile __near __bitf_T *)0xFFD0)->no7)
#define SMOTBIF0       (((volatile __near __bitf_T *)0xFFD1)->no0)
#define TMIF06         (((volatile __near __bitf_T *)0xFFD1)->no0)
#define SMOTAIF1       (((volatile __near __bitf_T *)0xFFD1)->no1)
#define TMIF07         (((volatile __near __bitf_T *)0xFFD1)->no1)
#define ITIF00         (((volatile __near __bitf_T *)0xFFD1)->no2)
#define ITIF01         (((volatile __near __bitf_T *)0xFFD1)->no3)
#define SREIF3         (((volatile __near __bitf_T *)0xFFD1)->no4)
#define MACIF          (((volatile __near __bitf_T *)0xFFD1)->no5)
#define SMOTBIF1       (((volatile __near __bitf_T *)0xFFD1)->no5)
#define OSDIF          (((volatile __near __bitf_T *)0xFFD1)->no6)
#define FLIF           (((volatile __near __bitf_T *)0xFFD1)->no7)
#define IF3            (*(volatile __near unsigned short *)0xFFD2)
#define IF3L           (*(volatile __near unsigned char  *)0xFFD2)
#define IF3L_bit       (*(volatile __near __bitf_T *)0xFFD2)
#define IF3H           (*(volatile __near unsigned char  *)0xFFD3)
#define IF3H_bit       (*(volatile __near __bitf_T *)0xFFD3)
#define PIF8           (((volatile __near __bitf_T *)0xFFD2)->no0)
#define PIF9           (((volatile __near __bitf_T *)0xFFD2)->no1)
#define ITIF10         (((volatile __near __bitf_T *)0xFFD2)->no2)
#define ITIF11         (((volatile __near __bitf_T *)0xFFD2)->no3)
#define ITIF20         (((volatile __near __bitf_T *)0xFFD2)->no4)
#define LVDVDIF        (((volatile __near __bitf_T *)0xFFD2)->no4)
#define ITIF21         (((volatile __near __bitf_T *)0xFFD2)->no5)
#define LVDVBIF        (((volatile __near __bitf_T *)0xFFD2)->no5)
#define ITIF30         (((volatile __near __bitf_T *)0xFFD2)->no6)
#define LVDVRIF        (((volatile __near __bitf_T *)0xFFD2)->no6)
#define ITIF31         (((volatile __near __bitf_T *)0xFFD2)->no7)
#define LVDEXIF        (((volatile __near __bitf_T *)0xFFD2)->no7)
#define STIF4          (((volatile __near __bitf_T *)0xFFD3)->no0)
#define STMGIF1        (((volatile __near __bitf_T *)0xFFD3)->no0)
#define SRIF4          (((volatile __near __bitf_T *)0xFFD3)->no1)
#define SRMGIF1        (((volatile __near __bitf_T *)0xFFD3)->no1)
#define SREIF4         (((volatile __near __bitf_T *)0xFFD3)->no2)
#define SREMGIF1       (((volatile __near __bitf_T *)0xFFD3)->no2)
#define DSADECIF       (((volatile __near __bitf_T *)0xFFD3)->no3)
#define TRJIF0         (((volatile __near __bitf_T *)0xFFD3)->no3)
#define TRJIF1         (((volatile __near __bitf_T *)0xFFD3)->no4)
#define MK2            (*(volatile __near unsigned short *)0xFFD4)
#define MK2L           (*(volatile __near unsigned char  *)0xFFD4)
#define MK2L_bit       (*(volatile __near __bitf_T *)0xFFD4)
#define MK2H           (*(volatile __near unsigned char  *)0xFFD5)
#define MK2H_bit       (*(volatile __near __bitf_T *)0xFFD5)
#define DSAMK          (((volatile __near __bitf_T *)0xFFD4)->no0)
#define SMPMK05        (((volatile __near __bitf_T *)0xFFD4)->no0)
#define SMPMK15        (((volatile __near __bitf_T *)0xFFD4)->no0)
#define TMMK04         (((volatile __near __bitf_T *)0xFFD4)->no1)
#define SMOTAMK0       (((volatile __near __bitf_T *)0xFFD4)->no2)
#define TMMK05         (((volatile __near __bitf_T *)0xFFD4)->no2)
#define PMK6           (((volatile __near __bitf_T *)0xFFD4)->no3)
#define PMK7           (((volatile __near __bitf_T *)0xFFD4)->no4)
#define PMK12          (((volatile __near __bitf_T *)0xFFD4)->no5)
#define RTCIMK2        (((volatile __near __bitf_T *)0xFFD4)->no5)
#define PMK13          (((volatile __near __bitf_T *)0xFFD4)->no6)
#define RTCIMK1        (((volatile __near __bitf_T *)0xFFD4)->no6)
#define RTCIMK0        (((volatile __near __bitf_T *)0xFFD4)->no7)
#define PMK14          (((volatile __near __bitf_T *)0xFFD4)->no7)
#define SMOTBMK0       (((volatile __near __bitf_T *)0xFFD5)->no0)
#define TMMK06         (((volatile __near __bitf_T *)0xFFD5)->no0)
#define SMOTAMK1       (((volatile __near __bitf_T *)0xFFD5)->no1)
#define TMMK07         (((volatile __near __bitf_T *)0xFFD5)->no1)
#define ITMK00         (((volatile __near __bitf_T *)0xFFD5)->no2)
#define ITMK01         (((volatile __near __bitf_T *)0xFFD5)->no3)
#define SREMK3         (((volatile __near __bitf_T *)0xFFD5)->no4)
#define MACMK          (((volatile __near __bitf_T *)0xFFD5)->no5)
#define SMOTBMK1       (((volatile __near __bitf_T *)0xFFD5)->no5)
#define OSDMK          (((volatile __near __bitf_T *)0xFFD5)->no6)
#define FLMK           (((volatile __near __bitf_T *)0xFFD5)->no7)
#define MK3            (*(volatile __near unsigned short *)0xFFD6)
#define MK3L           (*(volatile __near unsigned char  *)0xFFD6)
#define MK3L_bit       (*(volatile __near __bitf_T *)0xFFD6)
#define MK3H           (*(volatile __near unsigned char  *)0xFFD7)
#define MK3H_bit       (*(volatile __near __bitf_T *)0xFFD7)
#define PMK8           (((volatile __near __bitf_T *)0xFFD6)->no0)
#define PMK9           (((volatile __near __bitf_T *)0xFFD6)->no1)
#define ITMK10         (((volatile __near __bitf_T *)0xFFD6)->no2)
#define ITMK11         (((volatile __near __bitf_T *)0xFFD6)->no3)
#define ITMK20         (((volatile __near __bitf_T *)0xFFD6)->no4)
#define LVDVDMK        (((volatile __near __bitf_T *)0xFFD6)->no4)
#define ITMK21         (((volatile __near __bitf_T *)0xFFD6)->no5)
#define LVDVBMK        (((volatile __near __bitf_T *)0xFFD6)->no5)
#define ITMK30         (((volatile __near __bitf_T *)0xFFD6)->no6)
#define LVDVRMK        (((volatile __near __bitf_T *)0xFFD6)->no6)
#define ITMK31         (((volatile __near __bitf_T *)0xFFD6)->no7)
#define LVDEXMK        (((volatile __near __bitf_T *)0xFFD6)->no7)
#define STMGMK1        (((volatile __near __bitf_T *)0xFFD7)->no0)
#define STMK4          (((volatile __near __bitf_T *)0xFFD7)->no0)
#define SRMGMK1        (((volatile __near __bitf_T *)0xFFD7)->no1)
#define SRMK4          (((volatile __near __bitf_T *)0xFFD7)->no1)
#define SREMGMK1       (((volatile __near __bitf_T *)0xFFD7)->no2)
#define SREMK4         (((volatile __near __bitf_T *)0xFFD7)->no2)
#define DSADECMK       (((volatile __near __bitf_T *)0xFFD7)->no3)
#define TRJMK0         (((volatile __near __bitf_T *)0xFFD7)->no3)
#define TRJMK1         (((volatile __near __bitf_T *)0xFFD7)->no4)
#define PR02           (*(volatile __near unsigned short *)0xFFD8)
#define PR02L          (*(volatile __near unsigned char  *)0xFFD8)
#define PR02L_bit      (*(volatile __near __bitf_T *)0xFFD8)
#define PR02H          (*(volatile __near unsigned char  *)0xFFD9)
#define PR02H_bit      (*(volatile __near __bitf_T *)0xFFD9)
#define DSAPR0         (((volatile __near __bitf_T *)0xFFD8)->no0)
#define SMPPR005       (((volatile __near __bitf_T *)0xFFD8)->no0)
#define SMPPR015       (((volatile __near __bitf_T *)0xFFD8)->no0)
#define TMPR004        (((volatile __near __bitf_T *)0xFFD8)->no1)
#define SMOTAPR00      (((volatile __near __bitf_T *)0xFFD8)->no2)
#define TMPR005        (((volatile __near __bitf_T *)0xFFD8)->no2)
#define PPR06          (((volatile __near __bitf_T *)0xFFD8)->no3)
#define PPR07          (((volatile __near __bitf_T *)0xFFD8)->no4)
#define PPR012         (((volatile __near __bitf_T *)0xFFD8)->no5)
#define RTCIPR02       (((volatile __near __bitf_T *)0xFFD8)->no5)
#define PPR013         (((volatile __near __bitf_T *)0xFFD8)->no6)
#define RTCIPR01       (((volatile __near __bitf_T *)0xFFD8)->no6)
#define RTCIPR00       (((volatile __near __bitf_T *)0xFFD8)->no7)
#define PPR014         (((volatile __near __bitf_T *)0xFFD8)->no7)
#define SMOTBPR00      (((volatile __near __bitf_T *)0xFFD9)->no0)
#define TMPR006        (((volatile __near __bitf_T *)0xFFD9)->no0)
#define SMOTAPR01      (((volatile __near __bitf_T *)0xFFD9)->no1)
#define TMPR007        (((volatile __near __bitf_T *)0xFFD9)->no1)
#define ITPR000        (((volatile __near __bitf_T *)0xFFD9)->no2)
#define ITPR001        (((volatile __near __bitf_T *)0xFFD9)->no3)
#define SREPR03        (((volatile __near __bitf_T *)0xFFD9)->no4)
#define MACPR0         (((volatile __near __bitf_T *)0xFFD9)->no5)
#define SMOTBPR01      (((volatile __near __bitf_T *)0xFFD9)->no5)
#define OSDPR0         (((volatile __near __bitf_T *)0xFFD9)->no6)
#define FLPR0          (((volatile __near __bitf_T *)0xFFD9)->no7)
#define PR03           (*(volatile __near unsigned short *)0xFFDA)
#define PR03L          (*(volatile __near unsigned char  *)0xFFDA)
#define PR03L_bit      (*(volatile __near __bitf_T *)0xFFDA)
#define PR03H          (*(volatile __near unsigned char  *)0xFFDB)
#define PR03H_bit      (*(volatile __near __bitf_T *)0xFFDB)
#define PPR08          (((volatile __near __bitf_T *)0xFFDA)->no0)
#define PPR09          (((volatile __near __bitf_T *)0xFFDA)->no1)
#define ITPR010        (((volatile __near __bitf_T *)0xFFDA)->no2)
#define ITPR011        (((volatile __near __bitf_T *)0xFFDA)->no3)
#define ITPR020        (((volatile __near __bitf_T *)0xFFDA)->no4)
#define LVDVDPR0       (((volatile __near __bitf_T *)0xFFDA)->no4)
#define ITPR021        (((volatile __near __bitf_T *)0xFFDA)->no5)
#define LVDVBPR0       (((volatile __near __bitf_T *)0xFFDA)->no5)
#define ITPR030        (((volatile __near __bitf_T *)0xFFDA)->no6)
#define LVDVRPR0       (((volatile __near __bitf_T *)0xFFDA)->no6)
#define ITPR031        (((volatile __near __bitf_T *)0xFFDA)->no7)
#define LVDEXPR0       (((volatile __near __bitf_T *)0xFFDA)->no7)
#define STMGPR01       (((volatile __near __bitf_T *)0xFFDB)->no0)
#define STPR04         (((volatile __near __bitf_T *)0xFFDB)->no0)
#define SRMGPR01       (((volatile __near __bitf_T *)0xFFDB)->no1)
#define SRPR04         (((volatile __near __bitf_T *)0xFFDB)->no1)
#define SREMGPR01      (((volatile __near __bitf_T *)0xFFDB)->no2)
#define SREPR04        (((volatile __near __bitf_T *)0xFFDB)->no2)
#define DSADECPR0      (((volatile __near __bitf_T *)0xFFDB)->no3)
#define TRJPR00        (((volatile __near __bitf_T *)0xFFDB)->no3)
#define TRJPR01        (((volatile __near __bitf_T *)0xFFDB)->no4)
#define PR12           (*(volatile __near unsigned short *)0xFFDC)
#define PR12L          (*(volatile __near unsigned char  *)0xFFDC)
#define PR12L_bit      (*(volatile __near __bitf_T *)0xFFDC)
#define PR12H          (*(volatile __near unsigned char  *)0xFFDD)
#define PR12H_bit      (*(volatile __near __bitf_T *)0xFFDD)
#define DSAPR1         (((volatile __near __bitf_T *)0xFFDC)->no0)
#define SMPPR105       (((volatile __near __bitf_T *)0xFFDC)->no0)
#define SMPPR115       (((volatile __near __bitf_T *)0xFFDC)->no0)
#define TMPR104        (((volatile __near __bitf_T *)0xFFDC)->no1)
#define SMOTAPR10      (((volatile __near __bitf_T *)0xFFDC)->no2)
#define TMPR105        (((volatile __near __bitf_T *)0xFFDC)->no2)
#define PPR16          (((volatile __near __bitf_T *)0xFFDC)->no3)
#define PPR17          (((volatile __near __bitf_T *)0xFFDC)->no4)
#define PPR112         (((volatile __near __bitf_T *)0xFFDC)->no5)
#define RTCIPR12       (((volatile __near __bitf_T *)0xFFDC)->no5)
#define PPR113         (((volatile __near __bitf_T *)0xFFDC)->no6)
#define RTCIPR11       (((volatile __near __bitf_T *)0xFFDC)->no6)
#define RTCIPR10       (((volatile __near __bitf_T *)0xFFDC)->no7)
#define PPR114         (((volatile __near __bitf_T *)0xFFDC)->no7)
#define SMOTBPR10      (((volatile __near __bitf_T *)0xFFDD)->no0)
#define TMPR106        (((volatile __near __bitf_T *)0xFFDD)->no0)
#define SMOTAPR11      (((volatile __near __bitf_T *)0xFFDD)->no1)
#define TMPR107        (((volatile __near __bitf_T *)0xFFDD)->no1)
#define ITPR100        (((volatile __near __bitf_T *)0xFFDD)->no2)
#define ITPR101        (((volatile __near __bitf_T *)0xFFDD)->no3)
#define SREPR13        (((volatile __near __bitf_T *)0xFFDD)->no4)
#define MACPR1         (((volatile __near __bitf_T *)0xFFDD)->no5)
#define SMOTBPR11      (((volatile __near __bitf_T *)0xFFDD)->no5)
#define OSDPR1         (((volatile __near __bitf_T *)0xFFDD)->no6)
#define FLPR1          (((volatile __near __bitf_T *)0xFFDD)->no7)
#define PR13           (*(volatile __near unsigned short *)0xFFDE)
#define PR13L          (*(volatile __near unsigned char  *)0xFFDE)
#define PR13L_bit      (*(volatile __near __bitf_T *)0xFFDE)
#define PR13H          (*(volatile __near unsigned char  *)0xFFDF)
#define PR13H_bit      (*(volatile __near __bitf_T *)0xFFDF)
#define PPR18          (((volatile __near __bitf_T *)0xFFDE)->no0)
#define PPR19          (((volatile __near __bitf_T *)0xFFDE)->no1)
#define ITPR110        (((volatile __near __bitf_T *)0xFFDE)->no2)
#define ITPR111        (((volatile __near __bitf_T *)0xFFDE)->no3)
#define ITPR120        (((volatile __near __bitf_T *)0xFFDE)->no4)
#define LVDVDPR1       (((volatile __near __bitf_T *)0xFFDE)->no4)
#define ITPR121        (((volatile __near __bitf_T *)0xFFDE)->no5)
#define LVDVBPR1       (((volatile __near __bitf_T *)0xFFDE)->no5)
#define ITPR130        (((volatile __near __bitf_T *)0xFFDE)->no6)
#define LVDVRPR1       (((volatile __near __bitf_T *)0xFFDE)->no6)
#define ITPR131        (((volatile __near __bitf_T *)0xFFDE)->no7)
#define LVDEXPR1       (((volatile __near __bitf_T *)0xFFDE)->no7)
#define STMGPR11       (((volatile __near __bitf_T *)0xFFDF)->no0)
#define STPR14         (((volatile __near __bitf_T *)0xFFDF)->no0)
#define SRMGPR11       (((volatile __near __bitf_T *)0xFFDF)->no1)
#define SRPR14         (((volatile __near __bitf_T *)0xFFDF)->no1)
#define SREMGPR11      (((volatile __near __bitf_T *)0xFFDF)->no2)
#define SREPR14        (((volatile __near __bitf_T *)0xFFDF)->no2)
#define DSADECPR1      (((volatile __near __bitf_T *)0xFFDF)->no3)
#define TRJPR10        (((volatile __near __bitf_T *)0xFFDF)->no3)
#define TRJPR11        (((volatile __near __bitf_T *)0xFFDF)->no4)
#define IF0            (*(volatile __near unsigned short *)0xFFE0)
#define IF0L           (*(volatile __near unsigned char  *)0xFFE0)
#define IF0L_bit       (*(volatile __near __bitf_T *)0xFFE0)
#define IF0H           (*(volatile __near unsigned char  *)0xFFE1)
#define IF0H_bit       (*(volatile __near __bitf_T *)0xFFE1)
#define WDTIIF         (((volatile __near __bitf_T *)0xFFE0)->no0)
#define LVIIF          (((volatile __near __bitf_T *)0xFFE0)->no1)
#define PIF0           (((volatile __near __bitf_T *)0xFFE0)->no2)
#define PIF1           (((volatile __near __bitf_T *)0xFFE0)->no3)
#define PIF2           (((volatile __near __bitf_T *)0xFFE0)->no4)
#define PIF3           (((volatile __near __bitf_T *)0xFFE0)->no5)
#define PIF4           (((volatile __near __bitf_T *)0xFFE0)->no6)
#define PIF5           (((volatile __near __bitf_T *)0xFFE0)->no7)
#define STIF2          (((volatile __near __bitf_T *)0xFFE1)->no0)
#define STMGIF0        (((volatile __near __bitf_T *)0xFFE1)->no0)
#define SRIF2          (((volatile __near __bitf_T *)0xFFE1)->no1)
#define SRMGIF0        (((volatile __near __bitf_T *)0xFFE1)->no1)
#define SREIF2         (((volatile __near __bitf_T *)0xFFE1)->no2)
#define SREMGIF0       (((volatile __near __bitf_T *)0xFFE1)->no2)
#define CRIF           (((volatile __near __bitf_T *)0xFFE1)->no3)
#define SMPIF00        (((volatile __near __bitf_T *)0xFFE1)->no3)
#define SMPIF10        (((volatile __near __bitf_T *)0xFFE1)->no3)
#define CSIIF00        (((volatile __near __bitf_T *)0xFFE1)->no5)
#define IICIF00        (((volatile __near __bitf_T *)0xFFE1)->no5)
#define STIF0          (((volatile __near __bitf_T *)0xFFE1)->no5)
#define IICAIF0        (((volatile __near __bitf_T *)0xFFE1)->no6)
#define SRIF0          (((volatile __near __bitf_T *)0xFFE1)->no7)
#define IF1            (*(volatile __near unsigned short *)0xFFE2)
#define IF1L           (*(volatile __near unsigned char  *)0xFFE2)
#define IF1L_bit       (*(volatile __near __bitf_T *)0xFFE2)
#define IF1H           (*(volatile __near unsigned char  *)0xFFE3)
#define IF1H_bit       (*(volatile __near __bitf_T *)0xFFE3)
#define SREIF0         (((volatile __near __bitf_T *)0xFFE2)->no0)
#define TMIF01H        (((volatile __near __bitf_T *)0xFFE2)->no0)
#define CSIIF10        (((volatile __near __bitf_T *)0xFFE2)->no1)
#define IICIF10        (((volatile __near __bitf_T *)0xFFE2)->no1)
#define STIF1          (((volatile __near __bitf_T *)0xFFE2)->no1)
#define SRIF1          (((volatile __near __bitf_T *)0xFFE2)->no2)
#define SREIF1         (((volatile __near __bitf_T *)0xFFE2)->no3)
#define TMIF03H        (((volatile __near __bitf_T *)0xFFE2)->no3)
#define TMIF00         (((volatile __near __bitf_T *)0xFFE2)->no4)
#define RTCAIF0        (((volatile __near __bitf_T *)0xFFE2)->no5)
#define SMPIF01        (((volatile __near __bitf_T *)0xFFE2)->no5)
#define SMPIF11        (((volatile __near __bitf_T *)0xFFE2)->no5)
#define FMIF           (((volatile __near __bitf_T *)0xFFE2)->no6)
#define SMPIF02        (((volatile __near __bitf_T *)0xFFE2)->no6)
#define SMPIF12        (((volatile __near __bitf_T *)0xFFE2)->no6)
#define TMIF01         (((volatile __near __bitf_T *)0xFFE2)->no7)
#define TMIF02         (((volatile __near __bitf_T *)0xFFE3)->no0)
#define TMIF03         (((volatile __near __bitf_T *)0xFFE3)->no1)
#define ADIF           (((volatile __near __bitf_T *)0xFFE3)->no2)
#define RTCRIF         (((volatile __near __bitf_T *)0xFFE3)->no3)
#define SMPIF03        (((volatile __near __bitf_T *)0xFFE3)->no3)
#define SMPIF13        (((volatile __near __bitf_T *)0xFFE3)->no3)
#define TMKAIF         (((volatile __near __bitf_T *)0xFFE3)->no4)
#define KRIF           (((volatile __near __bitf_T *)0xFFE3)->no5)
#define RTCAIF1        (((volatile __near __bitf_T *)0xFFE3)->no5)
#define SMPIF04        (((volatile __near __bitf_T *)0xFFE3)->no5)
#define SMPIF14        (((volatile __near __bitf_T *)0xFFE3)->no5)
#define CSIIF30        (((volatile __near __bitf_T *)0xFFE3)->no6)
#define IICIF30        (((volatile __near __bitf_T *)0xFFE3)->no6)
#define STIF3          (((volatile __near __bitf_T *)0xFFE3)->no6)
#define SRIF3          (((volatile __near __bitf_T *)0xFFE3)->no7)
#define MK0            (*(volatile __near unsigned short *)0xFFE4)
#define MK0L           (*(volatile __near unsigned char  *)0xFFE4)
#define MK0L_bit       (*(volatile __near __bitf_T *)0xFFE4)
#define MK0H           (*(volatile __near unsigned char  *)0xFFE5)
#define MK0H_bit       (*(volatile __near __bitf_T *)0xFFE5)
#define WDTIMK         (((volatile __near __bitf_T *)0xFFE4)->no0)
#define LVIMK          (((volatile __near __bitf_T *)0xFFE4)->no1)
#define PMK0           (((volatile __near __bitf_T *)0xFFE4)->no2)
#define PMK1           (((volatile __near __bitf_T *)0xFFE4)->no3)
#define PMK2           (((volatile __near __bitf_T *)0xFFE4)->no4)
#define PMK3           (((volatile __near __bitf_T *)0xFFE4)->no5)
#define PMK4           (((volatile __near __bitf_T *)0xFFE4)->no6)
#define PMK5           (((volatile __near __bitf_T *)0xFFE4)->no7)
#define STMGMK0        (((volatile __near __bitf_T *)0xFFE5)->no0)
#define STMK2          (((volatile __near __bitf_T *)0xFFE5)->no0)
#define SRMGMK0        (((volatile __near __bitf_T *)0xFFE5)->no1)
#define SRMK2          (((volatile __near __bitf_T *)0xFFE5)->no1)
#define SREMGMK0       (((volatile __near __bitf_T *)0xFFE5)->no2)
#define SREMK2         (((volatile __near __bitf_T *)0xFFE5)->no2)
#define CRMK           (((volatile __near __bitf_T *)0xFFE5)->no3)
#define SMPMK00        (((volatile __near __bitf_T *)0xFFE5)->no3)
#define SMPMK10        (((volatile __near __bitf_T *)0xFFE5)->no3)
#define CSIMK00        (((volatile __near __bitf_T *)0xFFE5)->no5)
#define IICMK00        (((volatile __near __bitf_T *)0xFFE5)->no5)
#define STMK0          (((volatile __near __bitf_T *)0xFFE5)->no5)
#define IICAMK0        (((volatile __near __bitf_T *)0xFFE5)->no6)
#define SRMK0          (((volatile __near __bitf_T *)0xFFE5)->no7)
#define MK1            (*(volatile __near unsigned short *)0xFFE6)
#define MK1L           (*(volatile __near unsigned char  *)0xFFE6)
#define MK1L_bit       (*(volatile __near __bitf_T *)0xFFE6)
#define MK1H           (*(volatile __near unsigned char  *)0xFFE7)
#define MK1H_bit       (*(volatile __near __bitf_T *)0xFFE7)
#define SREMK0         (((volatile __near __bitf_T *)0xFFE6)->no0)
#define TMMK01H        (((volatile __near __bitf_T *)0xFFE6)->no0)
#define CSIMK10        (((volatile __near __bitf_T *)0xFFE6)->no1)
#define IICMK10        (((volatile __near __bitf_T *)0xFFE6)->no1)
#define STMK1          (((volatile __near __bitf_T *)0xFFE6)->no1)
#define SRMK1          (((volatile __near __bitf_T *)0xFFE6)->no2)
#define SREMK1         (((volatile __near __bitf_T *)0xFFE6)->no3)
#define TMMK03H        (((volatile __near __bitf_T *)0xFFE6)->no3)
#define TMMK00         (((volatile __near __bitf_T *)0xFFE6)->no4)
#define RTCAMK0        (((volatile __near __bitf_T *)0xFFE6)->no5)
#define SMPMK01        (((volatile __near __bitf_T *)0xFFE6)->no5)
#define SMPMK11        (((volatile __near __bitf_T *)0xFFE6)->no5)
#define FMMK           (((volatile __near __bitf_T *)0xFFE6)->no6)
#define SMPMK02        (((volatile __near __bitf_T *)0xFFE6)->no6)
#define SMPMK12        (((volatile __near __bitf_T *)0xFFE6)->no6)
#define TMMK01         (((volatile __near __bitf_T *)0xFFE6)->no7)
#define TMMK02         (((volatile __near __bitf_T *)0xFFE7)->no0)
#define TMMK03         (((volatile __near __bitf_T *)0xFFE7)->no1)
#define ADMK           (((volatile __near __bitf_T *)0xFFE7)->no2)
#define RTCRMK         (((volatile __near __bitf_T *)0xFFE7)->no3)
#define SMPMK03        (((volatile __near __bitf_T *)0xFFE7)->no3)
#define SMPMK13        (((volatile __near __bitf_T *)0xFFE7)->no3)
#define TMKAMK         (((volatile __near __bitf_T *)0xFFE7)->no4)
#define KRMK           (((volatile __near __bitf_T *)0xFFE7)->no5)
#define RTCAMK1        (((volatile __near __bitf_T *)0xFFE7)->no5)
#define SMPMK04        (((volatile __near __bitf_T *)0xFFE7)->no5)
#define SMPMK14        (((volatile __near __bitf_T *)0xFFE7)->no5)
#define CSIMK30        (((volatile __near __bitf_T *)0xFFE7)->no6)
#define IICMK30        (((volatile __near __bitf_T *)0xFFE7)->no6)
#define STMK3          (((volatile __near __bitf_T *)0xFFE7)->no6)
#define SRMK3          (((volatile __near __bitf_T *)0xFFE7)->no7)
#define PR00           (*(volatile __near unsigned short *)0xFFE8)
#define PR00L          (*(volatile __near unsigned char  *)0xFFE8)
#define PR00L_bit      (*(volatile __near __bitf_T *)0xFFE8)
#define PR00H          (*(volatile __near unsigned char  *)0xFFE9)
#define PR00H_bit      (*(volatile __near __bitf_T *)0xFFE9)
#define WDTIPR0        (((volatile __near __bitf_T *)0xFFE8)->no0)
#define LVIPR0         (((volatile __near __bitf_T *)0xFFE8)->no1)
#define PPR00          (((volatile __near __bitf_T *)0xFFE8)->no2)
#define PPR01          (((volatile __near __bitf_T *)0xFFE8)->no3)
#define PPR02          (((volatile __near __bitf_T *)0xFFE8)->no4)
#define PPR03          (((volatile __near __bitf_T *)0xFFE8)->no5)
#define PPR04          (((volatile __near __bitf_T *)0xFFE8)->no6)
#define PPR05          (((volatile __near __bitf_T *)0xFFE8)->no7)
#define STMGPR00       (((volatile __near __bitf_T *)0xFFE9)->no0)
#define STPR02         (((volatile __near __bitf_T *)0xFFE9)->no0)
#define SRMGPR00       (((volatile __near __bitf_T *)0xFFE9)->no1)
#define SRPR02         (((volatile __near __bitf_T *)0xFFE9)->no1)
#define SREMGPR00      (((volatile __near __bitf_T *)0xFFE9)->no2)
#define SREPR02        (((volatile __near __bitf_T *)0xFFE9)->no2)
#define CRPR0          (((volatile __near __bitf_T *)0xFFE9)->no3)
#define SMPPR000       (((volatile __near __bitf_T *)0xFFE9)->no3)
#define SMPPR010       (((volatile __near __bitf_T *)0xFFE9)->no3)
#define CSIPR000       (((volatile __near __bitf_T *)0xFFE9)->no5)
#define IICPR000       (((volatile __near __bitf_T *)0xFFE9)->no5)
#define STPR00         (((volatile __near __bitf_T *)0xFFE9)->no5)
#define IICAPR00       (((volatile __near __bitf_T *)0xFFE9)->no6)
#define SRPR00         (((volatile __near __bitf_T *)0xFFE9)->no7)
#define PR01           (*(volatile __near unsigned short *)0xFFEA)
#define PR01L          (*(volatile __near unsigned char  *)0xFFEA)
#define PR01L_bit      (*(volatile __near __bitf_T *)0xFFEA)
#define PR01H          (*(volatile __near unsigned char  *)0xFFEB)
#define PR01H_bit      (*(volatile __near __bitf_T *)0xFFEB)
#define SREPR00        (((volatile __near __bitf_T *)0xFFEA)->no0)
#define TMPR001H       (((volatile __near __bitf_T *)0xFFEA)->no0)
#define CSIPR010       (((volatile __near __bitf_T *)0xFFEA)->no1)
#define IICPR010       (((volatile __near __bitf_T *)0xFFEA)->no1)
#define STPR01         (((volatile __near __bitf_T *)0xFFEA)->no1)
#define SRPR01         (((volatile __near __bitf_T *)0xFFEA)->no2)
#define SREPR01        (((volatile __near __bitf_T *)0xFFEA)->no3)
#define TMPR003H       (((volatile __near __bitf_T *)0xFFEA)->no3)
#define TMPR000        (((volatile __near __bitf_T *)0xFFEA)->no4)
#define RTCAPR00       (((volatile __near __bitf_T *)0xFFEA)->no5)
#define SMPPR001       (((volatile __near __bitf_T *)0xFFEA)->no5)
#define SMPPR011       (((volatile __near __bitf_T *)0xFFEA)->no5)
#define FMPR0          (((volatile __near __bitf_T *)0xFFEA)->no6)
#define SMPPR002       (((volatile __near __bitf_T *)0xFFEA)->no6)
#define SMPPR012       (((volatile __near __bitf_T *)0xFFEA)->no6)
#define TMPR001        (((volatile __near __bitf_T *)0xFFEA)->no7)
#define TMPR002        (((volatile __near __bitf_T *)0xFFEB)->no0)
#define TMPR003        (((volatile __near __bitf_T *)0xFFEB)->no1)
#define ADPR0          (((volatile __near __bitf_T *)0xFFEB)->no2)
#define RTCRPR0        (((volatile __near __bitf_T *)0xFFEB)->no3)
#define SMPPR003       (((volatile __near __bitf_T *)0xFFEB)->no3)
#define SMPPR013       (((volatile __near __bitf_T *)0xFFEB)->no3)
#define TMKAPR0        (((volatile __near __bitf_T *)0xFFEB)->no4)
#define KRPR0          (((volatile __near __bitf_T *)0xFFEB)->no5)
#define RTCAPR01       (((volatile __near __bitf_T *)0xFFEB)->no5)
#define SMPPR004       (((volatile __near __bitf_T *)0xFFEB)->no5)
#define SMPPR014       (((volatile __near __bitf_T *)0xFFEB)->no5)
#define CSIPR030       (((volatile __near __bitf_T *)0xFFEB)->no6)
#define IICPR030       (((volatile __near __bitf_T *)0xFFEB)->no6)
#define STPR03         (((volatile __near __bitf_T *)0xFFEB)->no6)
#define SRPR03         (((volatile __near __bitf_T *)0xFFEB)->no7)
#define PR10           (*(volatile __near unsigned short *)0xFFEC)
#define PR10L          (*(volatile __near unsigned char  *)0xFFEC)
#define PR10L_bit      (*(volatile __near __bitf_T *)0xFFEC)
#define PR10H          (*(volatile __near unsigned char  *)0xFFED)
#define PR10H_bit      (*(volatile __near __bitf_T *)0xFFED)
#define WDTIPR1        (((volatile __near __bitf_T *)0xFFEC)->no0)
#define LVIPR1         (((volatile __near __bitf_T *)0xFFEC)->no1)
#define PPR10          (((volatile __near __bitf_T *)0xFFEC)->no2)
#define PPR11          (((volatile __near __bitf_T *)0xFFEC)->no3)
#define PPR12          (((volatile __near __bitf_T *)0xFFEC)->no4)
#define PPR13          (((volatile __near __bitf_T *)0xFFEC)->no5)
#define PPR14          (((volatile __near __bitf_T *)0xFFEC)->no6)
#define PPR15          (((volatile __near __bitf_T *)0xFFEC)->no7)
#define STMGPR10       (((volatile __near __bitf_T *)0xFFED)->no0)
#define STPR12         (((volatile __near __bitf_T *)0xFFED)->no0)
#define SRMGPR10       (((volatile __near __bitf_T *)0xFFED)->no1)
#define SRPR12         (((volatile __near __bitf_T *)0xFFED)->no1)
#define SREMGPR10      (((volatile __near __bitf_T *)0xFFED)->no2)
#define SREPR12        (((volatile __near __bitf_T *)0xFFED)->no2)
#define CRPR1          (((volatile __near __bitf_T *)0xFFED)->no3)
#define SMPPR100       (((volatile __near __bitf_T *)0xFFED)->no3)
#define SMPPR110       (((volatile __near __bitf_T *)0xFFED)->no3)
#define CSIPR100       (((volatile __near __bitf_T *)0xFFED)->no5)
#define IICPR100       (((volatile __near __bitf_T *)0xFFED)->no5)
#define STPR10         (((volatile __near __bitf_T *)0xFFED)->no5)
#define IICAPR10       (((volatile __near __bitf_T *)0xFFED)->no6)
#define SRPR10         (((volatile __near __bitf_T *)0xFFED)->no7)
#define PR11           (*(volatile __near unsigned short *)0xFFEE)
#define PR11L          (*(volatile __near unsigned char  *)0xFFEE)
#define PR11L_bit      (*(volatile __near __bitf_T *)0xFFEE)
#define PR11H          (*(volatile __near unsigned char  *)0xFFEF)
#define PR11H_bit      (*(volatile __near __bitf_T *)0xFFEF)
#define SREPR10        (((volatile __near __bitf_T *)0xFFEE)->no0)
#define TMPR101H       (((volatile __near __bitf_T *)0xFFEE)->no0)
#define CSIPR110       (((volatile __near __bitf_T *)0xFFEE)->no1)
#define IICPR110       (((volatile __near __bitf_T *)0xFFEE)->no1)
#define STPR11         (((volatile __near __bitf_T *)0xFFEE)->no1)
#define SRPR11         (((volatile __near __bitf_T *)0xFFEE)->no2)
#define SREPR11        (((volatile __near __bitf_T *)0xFFEE)->no3)
#define TMPR103H       (((volatile __near __bitf_T *)0xFFEE)->no3)
#define TMPR100        (((volatile __near __bitf_T *)0xFFEE)->no4)
#define RTCAPR10       (((volatile __near __bitf_T *)0xFFEE)->no5)
#define SMPPR101       (((volatile __near __bitf_T *)0xFFEE)->no5)
#define SMPPR111       (((volatile __near __bitf_T *)0xFFEE)->no5)
#define FMPR1          (((volatile __near __bitf_T *)0xFFEE)->no6)
#define SMPPR102       (((volatile __near __bitf_T *)0xFFEE)->no6)
#define SMPPR112       (((volatile __near __bitf_T *)0xFFEE)->no6)
#define TMPR101        (((volatile __near __bitf_T *)0xFFEE)->no7)
#define TMPR102        (((volatile __near __bitf_T *)0xFFEF)->no0)
#define TMPR103        (((volatile __near __bitf_T *)0xFFEF)->no1)
#define ADPR1          (((volatile __near __bitf_T *)0xFFEF)->no2)
#define RTCRPR1        (((volatile __near __bitf_T *)0xFFEF)->no3)
#define SMPPR103       (((volatile __near __bitf_T *)0xFFEF)->no3)
#define SMPPR113       (((volatile __near __bitf_T *)0xFFEF)->no3)
#define TMKAPR1        (((volatile __near __bitf_T *)0xFFEF)->no4)
#define KRPR1          (((volatile __near __bitf_T *)0xFFEF)->no5)
#define RTCAPR11       (((volatile __near __bitf_T *)0xFFEF)->no5)
#define SMPPR104       (((volatile __near __bitf_T *)0xFFEF)->no5)
#define SMPPR114       (((volatile __near __bitf_T *)0xFFEF)->no5)
#define CSIPR130       (((volatile __near __bitf_T *)0xFFEF)->no6)
#define IICPR130       (((volatile __near __bitf_T *)0xFFEF)->no6)
#define STPR13         (((volatile __near __bitf_T *)0xFFEF)->no6)
#define SRPR13         (((volatile __near __bitf_T *)0xFFEF)->no7)
#define MACRL          (*(volatile __near unsigned short *)0xFFF0)
#define MACRH          (*(volatile __near unsigned short *)0xFFF2)
#define PMC            (*(volatile __near unsigned char  *)0xFFFE)
#define PMC_bit        (*(volatile __near __bitf_T *)0xFFFE)
#define MAA            (((volatile __near __bitf_T *)0xFFFE)->no0)


#define INTWDTI                         0x0004
#define INTLVI                          0x0006
#define INTP0                           0x0008
#define INTP1                           0x000A
#define INTP2                           0x000C
#define INTP3                           0x000E
#define INTP4                           0x0010
#define INTP5                           0x0012
#define INTST2                          0x0014
#define INTSTMG0                        0x0014
#define INTSR2                          0x0016
#define INTSRMG0                        0x0016
#define INTSRE2                         0x0018
#define INTSREMG0                       0x0018
#define INTCR                           0x001A
#define INTSMP00                        0x001A
#define INTSMP10                        0x001A
#define INTCSI00                        0x001E
#define INTIIC00                        0x001E
#define INTST0                          0x001E
#define INTIICA0                        0x0020
#define INTSR0                          0x0022
#define INTSRE0                         0x0024
#define INTTM01H                        0x0024
#define INTCSI10                        0x0026
#define INTIIC10                        0x0026
#define INTST1                          0x0026
#define INTSR1                          0x0028
#define INTSRE1                         0x002A
#define INTTM03H                        0x002A
#define INTTM00                         0x002C
#define INTRTCALM0                      0x002E
#define INTSMP01                        0x002E
#define INTSMP11                        0x002E
#define INTFM                           0x0030
#define INTSMP02                        0x0030
#define INTSMP12                        0x0030
#define INTTM01                         0x0032
#define INTTM02                         0x0034
#define INTTM03                         0x0036
#define INTAD                           0x0038
#define INTRTCPRD                       0x003A
#define INTSMP03                        0x003A
#define INTSMP13                        0x003A
#define INTIT                           0x003C
#define INTKR                           0x003E
#define INTRTCALM1                      0x003E
#define INTSMP04                        0x003E
#define INTSMP14                        0x003E
#define INTCSI30                        0x0040
#define INTIIC30                        0x0040
#define INTST3                          0x0040
#define INTSR3                          0x0042
#define INTDSAD                         0x0044
#define INTSMP05                        0x0044
#define INTSMP15                        0x0044
#define INTTM04                         0x0046
#define INTSMOTA0                       0x0048
#define INTTM05                         0x0048
#define INTP6                           0x004A
#define INTP7                           0x004C
#define INTP12                          0x004E
#define INTRTCIC2                       0x004E
#define INTP13                          0x0050
#define INTRTCIC1                       0x0050
#define INTP14                          0x0052
#define INTRTCIC0                       0x0052
#define INTSMOTB0                       0x0054
#define INTTM06                         0x0054
#define INTSMOTA1                       0x0056
#define INTTM07                         0x0056
#define INTIT00                         0x0058
#define INTIT01                         0x005A
#define INTSRE3                         0x005C
#define INTMACLOF                       0x005E
#define INTSMOTB1                       0x005E
#define INTOSDC                         0x0060
#define INTFL                           0x0062
#define INTP8                           0x0064
#define INTP9                           0x0066
#define INTIT10                         0x0068
#define INTIT11                         0x006A
#define INTIT20                         0x006C
#define INTLVDVDD                       0x006C
#define INTIT21                         0x006E
#define INTLVDVBAT                      0x006E
#define INTIT30                         0x0070
#define INTLVDVRTC                      0x0070
#define INTIT31                         0x0072
#define INTLVDEXLVD                     0x0072
#define INTST4                          0x0074
#define INTSTMG1                        0x0074
#define INTSR4                          0x0076
#define INTSRMG1                        0x0076
#define INTSRE4                         0x0078
#define INTSREMG1                       0x0078
#define INTDSADDEC                      0x007A
#define INTTRJ0                         0x007A
#define INTTRJ1                         0x007C

#endif
